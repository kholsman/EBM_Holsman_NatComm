71+8+48+8+8+8
50+10+40+80
180-151
2+1087+7+1+5453+492+2+41+1330+146+64
/Users/kholsman/Documents/D_AFSC_Files/Manuscripts/Halibut_energetics/data/PLOT_Halibut_energetics.R
source("/Users/kholsman/Documents/D_AFSC_Files/Manuscripts/Halibut_energetics/data/PLOT_Halibut_energetics.R")
rm(list=ls())#
graphics.off()#
#
setwd("/Users/kholsman/")#
source("Documents/science/R_funKir/funKir.R")#
outfile.fig<-"Documents/D_AFSC_Files/Manuscripts/Halibut_energetics/Figs"#
data.path<-"Documents/D_AFSC_Files/Manuscripts/Halibut_energetics"#
#	diet.path<-"Dropbox/MSMt/msm-master/raw_data"#
root<-"Documents/D_AFSC_Files/Manuscripts/Halibut_energetics/data/"#
main.dat<-"Dropbox/AFSC_data/Food_habits_data/Newest"#
#	diet.path<-"Dropbox/AFSC_data/Food_habits_data/Newest"#
diet.path<-"Documents/D_AFSC_Files/Manuscripts/Halibut_energetics/data"#
#
load("Documents/D_AFSC_Files/AFSC_data/AFSC_data_all/halibut.cpue.goa.Rdata")#
load("Documents/D_AFSC_Files/AFSC_data/AFSC_data_all/halibut.cpue.ebs.Rdata")#
#PreyE<-read.csv(file.path(data.path,"data/AK_Prey_EnergyDensities.csv"))#
PreyE<-read.csv(file.path(diet.path,"/2018/PreyED_2018_USE.csv"),sep=",", header=T)#
load(file.path(outfile.fig,"Halibut_results.Rdata"))#
#EpreyUse<-15000  # generic for some of the evaluations#
col_in<-colorRampPalette(colors()[c(408,44,73)])#
col_in<-col1<-colorRampPalette(colors()[c(320,24)])#
dpii<-350#
update.figs<-1#
#________________________________________________________#
# Fig1#
#________________________________________________________#
#
  ylimmIn<-list()#
  ylimmIn[[1]]<-c(0,1.2)#
  ylimmIn[[2]]<-c(0,.1)#
  ylimmIn[[3]]<-c(0,.6)#
  ylimmIn[[4]]<-c(0,.6)#
  #  W=5;H=4;col1=col_in;ylimm=ylimmIn#
  # this first one plots growth,#
#
fig1<-function(W=5,H=4,col1=col_in,ylimm=ylimmIn){#
    # col1<-colorRampPalette(colors()[c(45,73)])#
    dev.new(width=W, height=H)#
    par(mar=c(3,5,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(2,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(2,2))#
    tt<-Halibut_E(par=PARMS_USE,data=list(TempC=-4:25,W=min(O2$W),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    plot(tt$TempC,tt$f.T,type="l", xlim=c(0,18), ylim=ylimm[[1]],axes=FALSE,ylab="",xlab="",lwd=2)#
    points(FTdat,pch=16)#
    axis(1);axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    abline(v=PARMS_USE$Tco,lty=3)#
    abline(v=PARMS_USE$Tcm,lty=3)#
    abline(v=PARMS_USE$Qc,lty=3)#
    text(PARMS_USE$Tco-.4,ylimm[[1]][2]*.95,"Tco", srt =90)#
    text(PARMS_USE$Tcm-.4,ylimm[[1]][2]*.95,"Tcm", srt =90)#
    text(PARMS_USE$Qc-.4,ylimm[[1]][2]*.95,"Qc", srt =90)#
    #mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    mtext("f(T)",2,outer=FALSE,line=2.5,font=2,cex=1)#
    text(.3,ylimm[[1]][2],"a)",font=2)#
    wtmp<-seq(0.2,7000,50)#
    Ctmp<-PARMS_USE$CA*wtmp^PARMS_USE$CB#
    plot(wtmp,Ctmp,type="l",axes=FALSE,ylab="",xlab="",lwd=2,ylim=ylimm[[2]])#
    points(alldat$W_g,alldat$Cmax_g_g_d,col=colors()[320])#
    lines(wtmp,Ctmp,lwd=2)#
    axis(2,las=2);axis(1,at=seq(0,7000,1000),lab=seq(0,7000,1000)/1000)#
    axis(1,at=c(-1e6,1e6));axis(2,at=c(-1e6,1e6))#
    #mtext("Weight (kg)",side=1,line=2,font=2)#
    mtext(expression(bold(paste("C (g"[prey]," g"[fish]^-1," d"^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    text(6950,ylimm[[2]][2],"b)",font=2)#
    Ts<-unique(O2$W)#
    cols<-as.numeric(as.factor(O2$W))#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=-4:25,W=min(O2$W),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    plot(tt3$TempC,tt3$R_g_g_d*100,type="l", xlim=c(0,18), axes=FALSE,ylab="",xlab="",lwd=2,ylim=ylimm[[3]],col=col1(3)[1])#
    points(O2$TempC,(O2$O2_J_g_d/HalibutED)*100,pch=16,col=col1(max(cols))[cols])#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=-4:25,W=max(O2$W),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    lines(tt3$TempC,tt3$R_g_g_d*100,col=col1(3)[3],lwd=2,lty=1)#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=-4:25,W=median(O2$W),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    lines(tt3$TempC,tt3$R_g_g_d*100,col=col1(3)[2],lwd=2,lty=2)#
    axis(1);axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    mtext(expression(bold(paste("Resting R (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    text(18,ylimm[[3]][2],"c)",font=2)#
    legend("topleft",paste(round(c(min(O2$W),median(O2$W),max(O2$W))/1000,1),"kg"),col=col1(3),lty=c(1,2,1),lwd=2,box.lty=0)#
    Ts<-unique(O2$TempC)#
    cols<-as.numeric(as.factor(O2$TempC))#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=Ts[1],W=seq(100,7000,10),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    plot(tt3$W,tt3$R_g_g_d*100,type="l", axes=FALSE,ylab="",xlab="",lwd=2,ylim=ylimm[[4]],col=col1(3)[1])#
    points(10^(O2$log10W_g),(O2$O2_gO2_g_d*(13560/HalibutED))*100,pch=16,col=col1(max(cols))[cols])#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=Ts[2],W=seq(100,7000,10),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    lines(tt3$W,tt3$R_g_g_d*100,col=col1(3)[2],lwd=2)#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=Ts[3],W=seq(100,7000,10),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    lines(tt3$W,tt3$R_g_g_d*100,col=col1(3)[3],lwd=2)#
    # legend("topleft",paste(Ts,"degC"),col=col1(3),lwd=2,box.lty=0,title="Temp.")#
    legend(1000,ylimm[[4]][2],as.character(Ts),col=col1(3),lwd=2,box.lty=0) #,title=expression(bold(paste("Temp. ( ",""^"o","C )"))))#
    axis(1,at=seq(0,7000,1000),lab=seq(0,7,1))#
    axis(1,at=c(-1e6,1e6))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    mtext("Weight (kg)",side=1,line=2,font=2)#
    mtext(expression(bold(paste("Resting R (% BW ", d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    text(6950,ylimm[[4]][2],"d)",font=2)#
  }#
  fig1(W=6,H=5)#
  #dev.copy(jpeg,filename=file.path(outfile.fig,"Fig1.new.jpg"),res=500,units="in",width=W,height=H)   graphics.off() #
 if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig3.jpg"),dpi=dpii)#
  graphics.off()#
#________________________________________________________#
# Fig1.2  Plot velocity#
#________________________________________________________#
#
fig1.2<-function(W=4,H=3,ltyy=c(1,2,1,2),pp){	#
  Tro.use<-pp$Tro#
  Trl.use<-pp$Trl#
  vel.par<-pp#
  hat<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=na.omit(act.data),fitLL=FALSE))#
    # plot(act.data$W,act.data$speed,ylim=c(0,.5))#
    # points(na.omit(act.data)$W,hat$Vel,col="red")#
    newdata<-rbind(#
      data.frame(TempC=0,W=exp(seq(-2.5,4,.1)),speed=NA),#
      data.frame(TempC=6,W=exp(seq(-2.5,4,.1)),speed=NA),#
      data.frame(TempC=10,W=exp(seq(-2.5,4,.1)),speed=NA),#
      data.frame(TempC=14,W=exp(seq(-2.5,4,.1)),speed=NA),#
      data.frame(TempC=20,W=exp(seq(-2.5,4,.1)),speed=NA))#
    newdata<-rbind(#
      data.frame(TempC=seq(0,15,.2),W=10,speed=NA),#
      data.frame(TempC=seq(0,15,.2),W=100,speed=NA),#
      data.frame(TempC=seq(0,15,.2),W=300,speed=NA),#
      data.frame(TempC=seq(0,15,.2),W=5900,speed=NA)#
    )#
    dev.new(width=W,height=H)#
    par(mfrow=c(1,2))#
    par(mar=c(1,2,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    cc<-2#
    tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
    Ww<-seq(0.2,10000,20)#
    Ts<-c(0,6,10,14)#
    nn<-length(Ts)#
    for(i in 1:nn){#
      newdata<-data.frame(TempC=Ts[i],W=Ww,speed=NA);tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
      if(i==1){#
        Tt<-0;newdata<-data.frame(TempC=Tt,W=Ww,speed=NA);tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
        plot(newdata$W,tmp[[cc]],type="l",col=col1(nn)[i],lwd=2,ylim=c(0,3),ylab="Activity",xlab="",axes=F)#
        axis(1,at=seq(0,10000,2000),lab=seq(0,10,2))#
        axis(1,at=c(-1e6,1e6))#
        axis(2,las=2,at=seq(0,3,.5));axis(2, at=c(-10,100),las=2)#
      }else{#
        lines(newdata$W,tmp[[cc]],lty=ltyy[i],col=col1(nn)[i],lwd=2)#
      }#
    }#
    mtext(side=1,"Weight (Kg)",font=2,line=2)#
    mtext(side=2,"Activity",font=2,line=2)#
    rp = vector('expression',nn)#
    for(i in 1:nn)#
      rp[i]<-expression(bquote(.(Ts[i])),degree)[2]#
    legend("topleft",legend=Ts, col=col1(5)[1:5],lwd=2, lty=ltyy,box.lty=0,bty = 'n',title=expression(paste("Temp.", degree, "C")))#
    Ws<-c(5900,300,100)#
    nn<-length(Ws)#
    Tt<-seq(0,20,.2)#
    for(i in 1:nn){#
      newdata<-data.frame(TempC=Tt,W=Ws[i],speed=NA)#
      tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
      if(i==1){#
        plot(newdata$TempC,tmp[[2]],type="l",ylab="",xlab="",col=col1(nn)[i],lwd=2,xlim=c(0,13),ylim=c(0,3),axes=FALSE)#
        axis(1,at=seq(0,18,4))#
        axis(1,at=c(-1e6,1e6))#
        axis(2,las=2,at=seq(0,3,.5),lab=rep("",length(seq(0,3,.5))));axis(2, at=c(-10,100))#
        mtext(side=1,"Temperature",font=2,line=2)#
      }else{#
        lines(newdata$TempC,tmp[[2]],lty=ltyy[i],ylab="",xlab="",col=col1(nn)[i],lwd=2,xlim=c(0,18),ylim=c(0,3),axes=FALSE)#
      }#
    }#
    legend("topleft",legend=round(Ws/1000,2), col=col1(5)[1:5],lwd=2,lty=ltyy, box.lty=0,bty = 'n',title="Weight (Kg)")#
    #Ww<-100000;newdata<-data.frame(TempC=Tt,W=Ww,speed=NA);tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
    #	points(newdata$TempC,tmp[[2]],type="l",col=col1(3)[1],lwd=2)#
  }#
  fig1.2(W=6,H=4,pp=Rpar)#
   if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig2.jpg"),dpi=dpii)#
#
  graphics.off() #
#________________________________________________________#
# Fig2: alt#
#________________________________________________________#
  ylimmIn<-list()#
  ylimmIn[[1]]<-c(-.001,0.03)#
  ylimmIn[[2]]<-c(-.001,0.03)#
  # this one plots Growth (a) and mass balance (b) in g/g/d #
fig2v1<-function(W=5,H=7,ylimm=ylimmIn){#
    Ttmp<-seq(-4,25,.1)#
    wtmp<-1000#
    Wuse<-1000#
    rtmp<-(PARMS_USE$RA*wtmp^PARMS_USE$RB)*exp(PARMS_USE$RQ*Ttmp)#
    data<-list(TempC=5,W=Wuse,Eprey=EpreyUse,Epred=HalibutED)#
    data.tmp<-list(TempC=Ttmp,W=Wuse,Eprey=EpreyUse,Epred=HalibutED,Pvalue=1)#
    tt<-Halibut_E(par=PARMS_USE,data=data.tmp)#
    tt2<-Halibut_E(par=PARMS_USE,data=list(TempC=Ttmp,W=Wuse,Eprey=EpreyUse,Epred=HalibutED,Pvalue=.5))#
    tt_alt<-Halibut_E(par=PARMS,data=data.tmp)#
    quartz(width=W, height=H)#
    par(mfrow=c(2,1))#
    par(mar=c(1,1,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3.5,3.5,2,2))# outer margins of graph: (bottom,left, top, right)#
    plot(tt$TempC,tt$G_g_g_d,type="l", ylim=ylimm[[1]],xlim=c(0,18),axes=FALSE,ylab="",xlab="",lwd=2)#
    lines(tt2$TempC,tt2$G_g_g_d,lty=2,lwd=2)#
    #lines(tt_alt$TempC,tt_alt$G_g_g_d*100,lty=2,lwd=2,col="red")#
    abline(v=PARMS_USE$Tco,lty=3)#
    abline(v=PARMS_USE$Tcm,lty=3)#
    abline(v=PARMS_USE$Qc,lty=3)#
    text(PARMS_USE$Tco-.4,ylimm[[1]][2]*.4,"Tco", srt =90)#
    text(PARMS_USE$Tcm-.4,ylimm[[1]][2]*.4,"Tcm", srt =90)#
    text(PARMS_USE$Qc-.4,ylimm[[1]][2]*.4,"Qc", srt =90)#
    abline(h=0)#
    xatt<-seq(0,35,5)#
    axis(1,at=xatt,lab=rep("",length(xatt)));axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    #mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    #mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    mtext(expression(bold(paste("Growth (g g"^-1,d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    legend(-.7,ylimm[[1]][2]*.98, c("1.0", "0.5"),title="RFR",lty=c(1,2),lwd=2,box.lty=0)#
    text(0,ylimm[[1]][2],"a)",font=2,col="black")#
    plot(tt$TempC,tt$C_g_g_d,type="l", xlim=c(0,18), ylim=ylimm[[2]],axes=FALSE,ylab="",xlab="")#
    nx<-length(tt$TempC)#
    xx<-c(tt$TempC,tt$TempC[nx:1])#
    G<-tt$G_g_g_d<-(tt$C_g_g_d-(tt$R_g_g_d*tt$ACT+tt$SDA_g_g_d+tt$F_g_g_d+tt$U_g_g_d))#
    R<-tt$R_g_g_d*tt$ACT#
    SDA<-tt$SDA_g_g_d#
    F<-tt$F_g_g_d#
    U<-tt$U_g_g_d#
    yy<-c(G+R+SDA+F+U,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[1])#
    maxU<-max.na(yy)#
    yy<-c(G+R+SDA+F ,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[2])#
    maxF<-max.na(yy)#
    yy<-c(G+R+SDA,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[3])#
    maxSDA<-max.na(yy)	#
    yy<-c(G+R,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[4])#
    maxR<-max.na(yy)#
    yy<-c(G,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[6])#
    axis(1,at=xatt);axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-1,1))#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    mtext(expression(bold(paste("Rate (g g"^-1,d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    #mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    text(13,max.na(G)*.6,"Growth",font=2,col="white")#
    text(13,maxR*.9,"R*Act",font=2,col="white")#
    text(13,maxSDA*.94,"SDA",font=2,col="white")#
    text(13,maxF*.9,"F",font=2,col="white")#
    text(15.1,maxU*1.05,"U",font=2,col="black")#
    lines(c(13,14.8),c(maxU*.98,maxU*1.05))#
    lines(tt$TempC,tt$C_g_g_d,lwd=2)#
    #lines(tt_alt$TempC,tt_alt$C_g_g_d,lwd=2)#
    nn<-which(tt$TempC==10)#
    text(7,1.1*tt$C_g_g_d[nn],expression(bold(paste("C"[max]))),font=2,col="black")#
    lines(c(7.5,10),c(1.05*tt$C_g_g_d[nn],tt$C_g_g_d[nn]))#
    text(0,ylimm[[2]][2],"b)",font=2,col="black")#
    return(list(results=tt,G=G,R=R,SDA=SDA,F=F,U=U))#
  }#
#
  mod1<-fig2v1()#
  ylimmIn<-list()#
  ylimmIn[[1]]<-c(-.001,3.5)#
  ylimmIn[[2]]<-c(-.001,0.14)#
  # this one plots C in g prey / g pred / day (a) and mass balance (b) in J/g/d
## Plots for Halibut Paper:#
rm(list=ls())#
graphics.off()#
#
setwd("/Users/kholsman/")#
source("Documents/science/R_funKir/funKir.R")#
outfile.fig<-"Documents/D_AFSC_Files/Manuscripts/Halibut_energetics/Figs"#
data.path<-"Documents/D_AFSC_Files/Manuscripts/Halibut_energetics"#
#	diet.path<-"Dropbox/MSMt/msm-master/raw_data"#
root<-"Documents/D_AFSC_Files/Manuscripts/Halibut_energetics/data/"#
main.dat<-"Dropbox/AFSC_data/Food_habits_data/Newest"#
#	diet.path<-"Dropbox/AFSC_data/Food_habits_data/Newest"#
diet.path<-"Documents/D_AFSC_Files/Manuscripts/Halibut_energetics/data"#
#
load("Documents/D_AFSC_Files/AFSC_data/AFSC_data_all/halibut.cpue.goa.Rdata")#
load("Documents/D_AFSC_Files/AFSC_data/AFSC_data_all/halibut.cpue.ebs.Rdata")#
#PreyE<-read.csv(file.path(data.path,"data/AK_Prey_EnergyDensities.csv"))#
PreyE<-read.csv(file.path(diet.path,"/2018/PreyED_2018_USE.csv"),sep=",", header=T)#
load(file.path(outfile.fig,"Halibut_results.Rdata"))#
#EpreyUse<-15000  # generic for some of the evaluations#
col_in<-colorRampPalette(colors()[c(408,44,73)])#
col_in<-col1<-colorRampPalette(colors()[c(320,24)])#
dpii<-350#
update.figs<-1#
#________________________________________________________#
# Fig1#
#________________________________________________________#
#
  ylimmIn<-list()#
  ylimmIn[[1]]<-c(0,1.2)#
  ylimmIn[[2]]<-c(0,.1)#
  ylimmIn[[3]]<-c(0,.6)#
  ylimmIn[[4]]<-c(0,.6)#
  #  W=5;H=4;col1=col_in;ylimm=ylimmIn#
  # this first one plots growth,#
#
fig1<-function(W=5,H=4,col1=col_in,ylimm=ylimmIn){#
    # col1<-colorRampPalette(colors()[c(45,73)])#
    dev.new(width=W, height=H)#
    par(mar=c(3,5,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(2,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(2,2))#
    tt<-Halibut_E(par=PARMS_USE,data=list(TempC=-4:25,W=min(O2$W),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    plot(tt$TempC,tt$f.T,type="l", xlim=c(0,18), ylim=ylimm[[1]],axes=FALSE,ylab="",xlab="",lwd=2)#
    points(FTdat,pch=16)#
    axis(1);axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    abline(v=PARMS_USE$Tco,lty=3)#
    abline(v=PARMS_USE$Tcm,lty=3)#
    abline(v=PARMS_USE$Qc,lty=3)#
    text(PARMS_USE$Tco-.4,ylimm[[1]][2]*.95,"Tco", srt =90)#
    text(PARMS_USE$Tcm-.4,ylimm[[1]][2]*.95,"Tcm", srt =90)#
    text(PARMS_USE$Qc-.4,ylimm[[1]][2]*.95,"Qc", srt =90)#
    #mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    mtext("f(T)",2,outer=FALSE,line=2.5,font=2,cex=1)#
    text(.3,ylimm[[1]][2],"a)",font=2)#
    wtmp<-seq(0.2,7000,50)#
    Ctmp<-PARMS_USE$CA*wtmp^PARMS_USE$CB#
    plot(wtmp,Ctmp,type="l",axes=FALSE,ylab="",xlab="",lwd=2,ylim=ylimm[[2]])#
    points(alldat$W_g,alldat$Cmax_g_g_d,col=colors()[320])#
    lines(wtmp,Ctmp,lwd=2)#
    axis(2,las=2);axis(1,at=seq(0,7000,1000),lab=seq(0,7000,1000)/1000)#
    axis(1,at=c(-1e6,1e6));axis(2,at=c(-1e6,1e6))#
    #mtext("Weight (kg)",side=1,line=2,font=2)#
    mtext(expression(bold(paste("C (g"[prey]," g"[fish]^-1," d"^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    text(6950,ylimm[[2]][2],"b)",font=2)#
    Ts<-unique(O2$W)#
    cols<-as.numeric(as.factor(O2$W))#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=-4:25,W=min(O2$W),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    plot(tt3$TempC,tt3$R_g_g_d*100,type="l", xlim=c(0,18), axes=FALSE,ylab="",xlab="",lwd=2,ylim=ylimm[[3]],col=col1(3)[1])#
    points(O2$TempC,(O2$O2_J_g_d/HalibutED)*100,pch=16,col=col1(max(cols))[cols])#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=-4:25,W=max(O2$W),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    lines(tt3$TempC,tt3$R_g_g_d*100,col=col1(3)[3],lwd=2,lty=1)#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=-4:25,W=median(O2$W),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    lines(tt3$TempC,tt3$R_g_g_d*100,col=col1(3)[2],lwd=2,lty=2)#
    axis(1);axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    mtext(expression(bold(paste("Resting R (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    text(18,ylimm[[3]][2],"c)",font=2)#
    legend("topleft",paste(round(c(min(O2$W),median(O2$W),max(O2$W))/1000,1),"kg"),col=col1(3),lty=c(1,2,1),lwd=2,box.lty=0)#
    Ts<-unique(O2$TempC)#
    cols<-as.numeric(as.factor(O2$TempC))#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=Ts[1],W=seq(100,7000,10),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    plot(tt3$W,tt3$R_g_g_d*100,type="l", axes=FALSE,ylab="",xlab="",lwd=2,ylim=ylimm[[4]],col=col1(3)[1])#
    points(10^(O2$log10W_g),(O2$O2_gO2_g_d*(13560/HalibutED))*100,pch=16,col=col1(max(cols))[cols])#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=Ts[2],W=seq(100,7000,10),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    lines(tt3$W,tt3$R_g_g_d*100,col=col1(3)[2],lwd=2)#
    tt3<-Halibut_E(par=PARMS_USE,data=list(TempC=Ts[3],W=seq(100,7000,10),Eprey=EpreyUse,Epred=HalibutED,Pvalue=1))#
    lines(tt3$W,tt3$R_g_g_d*100,col=col1(3)[3],lwd=2)#
    # legend("topleft",paste(Ts,"degC"),col=col1(3),lwd=2,box.lty=0,title="Temp.")#
    legend(1000,ylimm[[4]][2],as.character(Ts),col=col1(3),lwd=2,box.lty=0) #,title=expression(bold(paste("Temp. ( ",""^"o","C )"))))#
    axis(1,at=seq(0,7000,1000),lab=seq(0,7,1))#
    axis(1,at=c(-1e6,1e6))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    mtext("Weight (kg)",side=1,line=2,font=2)#
    mtext(expression(bold(paste("Resting R (% BW ", d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    text(6950,ylimm[[4]][2],"d)",font=2)#
  }#
  fig1(W=6,H=5)#
  #dev.copy(jpeg,filename=file.path(outfile.fig,"Fig1.new.jpg"),res=500,units="in",width=W,height=H)   graphics.off() #
 if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig3.jpg"),dpi=dpii)#
  graphics.off()#
#________________________________________________________#
# Fig1.2  Plot velocity#
#________________________________________________________#
#
fig1.2<-function(W=4,H=3,ltyy=c(1,2,1,2),pp){	#
  Tro.use<-pp$Tro#
  Trl.use<-pp$Trl#
  vel.par<-pp#
  hat<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=na.omit(act.data),fitLL=FALSE))#
    # plot(act.data$W,act.data$speed,ylim=c(0,.5))#
    # points(na.omit(act.data)$W,hat$Vel,col="red")#
    newdata<-rbind(#
      data.frame(TempC=0,W=exp(seq(-2.5,4,.1)),speed=NA),#
      data.frame(TempC=6,W=exp(seq(-2.5,4,.1)),speed=NA),#
      data.frame(TempC=10,W=exp(seq(-2.5,4,.1)),speed=NA),#
      data.frame(TempC=14,W=exp(seq(-2.5,4,.1)),speed=NA),#
      data.frame(TempC=20,W=exp(seq(-2.5,4,.1)),speed=NA))#
    newdata<-rbind(#
      data.frame(TempC=seq(0,15,.2),W=10,speed=NA),#
      data.frame(TempC=seq(0,15,.2),W=100,speed=NA),#
      data.frame(TempC=seq(0,15,.2),W=300,speed=NA),#
      data.frame(TempC=seq(0,15,.2),W=5900,speed=NA)#
    )#
    dev.new(width=W,height=H)#
    par(mfrow=c(1,2))#
    par(mar=c(1,2,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    cc<-2#
    tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
    Ww<-seq(0.2,10000,20)#
    Ts<-c(0,6,10,14)#
    nn<-length(Ts)#
    for(i in 1:nn){#
      newdata<-data.frame(TempC=Ts[i],W=Ww,speed=NA);tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
      if(i==1){#
        Tt<-0;newdata<-data.frame(TempC=Tt,W=Ww,speed=NA);tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
        plot(newdata$W,tmp[[cc]],type="l",col=col1(nn)[i],lwd=2,ylim=c(0,3),ylab="Activity",xlab="",axes=F)#
        axis(1,at=seq(0,10000,2000),lab=seq(0,10,2))#
        axis(1,at=c(-1e6,1e6))#
        axis(2,las=2,at=seq(0,3,.5));axis(2, at=c(-10,100),las=2)#
      }else{#
        lines(newdata$W,tmp[[cc]],lty=ltyy[i],col=col1(nn)[i],lwd=2)#
      }#
    }#
    mtext(side=1,"Weight (Kg)",font=2,line=2)#
    mtext(side=2,"Activity",font=2,line=2)#
    rp = vector('expression',nn)#
    for(i in 1:nn)#
      rp[i]<-expression(bquote(.(Ts[i])),degree)[2]#
    legend("topleft",legend=Ts, col=col1(5)[1:5],lwd=2, lty=ltyy,box.lty=0,bty = 'n',title=expression(paste("Temp.", degree, "C")))#
    Ws<-c(5900,300,100)#
    nn<-length(Ws)#
    Tt<-seq(0,20,.2)#
    for(i in 1:nn){#
      newdata<-data.frame(TempC=Tt,W=Ws[i],speed=NA)#
      tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
      if(i==1){#
        plot(newdata$TempC,tmp[[2]],type="l",ylab="",xlab="",col=col1(nn)[i],lwd=2,xlim=c(0,13),ylim=c(0,3),axes=FALSE)#
        axis(1,at=seq(0,18,4))#
        axis(1,at=c(-1e6,1e6))#
        axis(2,las=2,at=seq(0,3,.5),lab=rep("",length(seq(0,3,.5))));axis(2, at=c(-10,100))#
        mtext(side=1,"Temperature",font=2,line=2)#
      }else{#
        lines(newdata$TempC,tmp[[2]],lty=ltyy[i],ylab="",xlab="",col=col1(nn)[i],lwd=2,xlim=c(0,18),ylim=c(0,3),axes=FALSE)#
      }#
    }#
    legend("topleft",legend=round(Ws/1000,2), col=col1(5)[1:5],lwd=2,lty=ltyy, box.lty=0,bty = 'n',title="Weight (Kg)")#
    #Ww<-100000;newdata<-data.frame(TempC=Tt,W=Ww,speed=NA);tmp<-vel_fun(par=vel.par,data=list(Tro=Tro.use,Trl=Trl.use,actdat=newdata,fitLL=FALSE))#
    #	points(newdata$TempC,tmp[[2]],type="l",col=col1(3)[1],lwd=2)#
  }#
  fig1.2(W=6,H=4,pp=Rpar)#
   if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig2.jpg"),dpi=dpii)#
#
  graphics.off() #
#________________________________________________________#
# Fig2: alt#
#________________________________________________________#
  ylimmIn<-list()#
  ylimmIn[[1]]<-c(-.001,0.03)#
  ylimmIn[[2]]<-c(-.001,0.03)#
  # this one plots Growth (a) and mass balance (b) in g/g/d #
fig2v1<-function(W=5,H=7,ylimm=ylimmIn){#
    Ttmp<-seq(-4,25,.1)#
    wtmp<-1000#
    Wuse<-1000#
    rtmp<-(PARMS_USE$RA*wtmp^PARMS_USE$RB)*exp(PARMS_USE$RQ*Ttmp)#
    data<-list(TempC=5,W=Wuse,Eprey=EpreyUse,Epred=HalibutED)#
    data.tmp<-list(TempC=Ttmp,W=Wuse,Eprey=EpreyUse,Epred=HalibutED,Pvalue=1)#
    tt<-Halibut_E(par=PARMS_USE,data=data.tmp)#
    tt2<-Halibut_E(par=PARMS_USE,data=list(TempC=Ttmp,W=Wuse,Eprey=EpreyUse,Epred=HalibutED,Pvalue=.5))#
    tt_alt<-Halibut_E(par=PARMS,data=data.tmp)#
    quartz(width=W, height=H)#
    par(mfrow=c(2,1))#
    par(mar=c(1,1,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3.5,3.5,2,2))# outer margins of graph: (bottom,left, top, right)#
    plot(tt$TempC,tt$G_g_g_d,type="l", ylim=ylimm[[1]],xlim=c(0,18),axes=FALSE,ylab="",xlab="",lwd=2)#
    lines(tt2$TempC,tt2$G_g_g_d,lty=2,lwd=2)#
    #lines(tt_alt$TempC,tt_alt$G_g_g_d*100,lty=2,lwd=2,col="red")#
    abline(v=PARMS_USE$Tco,lty=3)#
    abline(v=PARMS_USE$Tcm,lty=3)#
    abline(v=PARMS_USE$Qc,lty=3)#
    text(PARMS_USE$Tco-.4,ylimm[[1]][2]*.4,"Tco", srt =90)#
    text(PARMS_USE$Tcm-.4,ylimm[[1]][2]*.4,"Tcm", srt =90)#
    text(PARMS_USE$Qc-.4,ylimm[[1]][2]*.4,"Qc", srt =90)#
    abline(h=0)#
    xatt<-seq(0,35,5)#
    axis(1,at=xatt,lab=rep("",length(xatt)));axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    #mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    #mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    mtext(expression(bold(paste("Growth (g g"^-1,d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    legend(-.7,ylimm[[1]][2]*.98, c("1.0", "0.5"),title="RFR",lty=c(1,2),lwd=2,box.lty=0)#
    text(0,ylimm[[1]][2],"a)",font=2,col="black")#
    plot(tt$TempC,tt$C_g_g_d,type="l", xlim=c(0,18), ylim=ylimm[[2]],axes=FALSE,ylab="",xlab="")#
    nx<-length(tt$TempC)#
    xx<-c(tt$TempC,tt$TempC[nx:1])#
    G<-tt$G_g_g_d<-(tt$C_g_g_d-(tt$R_g_g_d*tt$ACT+tt$SDA_g_g_d+tt$F_g_g_d+tt$U_g_g_d))#
    R<-tt$R_g_g_d*tt$ACT#
    SDA<-tt$SDA_g_g_d#
    F<-tt$F_g_g_d#
    U<-tt$U_g_g_d#
    yy<-c(G+R+SDA+F+U,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[1])#
    maxU<-max.na(yy)#
    yy<-c(G+R+SDA+F ,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[2])#
    maxF<-max.na(yy)#
    yy<-c(G+R+SDA,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[3])#
    maxSDA<-max.na(yy)	#
    yy<-c(G+R,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[4])#
    maxR<-max.na(yy)#
    yy<-c(G,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[6])#
    axis(1,at=xatt);axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-1,1))#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    mtext(expression(bold(paste("Rate (g g"^-1,d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    #mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    text(13,max.na(G)*.6,"Growth",font=2,col="white")#
    text(13,maxR*.9,"R*Act",font=2,col="white")#
    text(13,maxSDA*.94,"SDA",font=2,col="white")#
    text(13,maxF*.9,"F",font=2,col="white")#
    text(15.1,maxU*1.05,"U",font=2,col="black")#
    lines(c(13,14.8),c(maxU*.98,maxU*1.05))#
    lines(tt$TempC,tt$C_g_g_d,lwd=2)#
    #lines(tt_alt$TempC,tt_alt$C_g_g_d,lwd=2)#
    nn<-which(tt$TempC==10)#
    text(7,1.1*tt$C_g_g_d[nn],expression(bold(paste("C"[max]))),font=2,col="black")#
    lines(c(7.5,10),c(1.05*tt$C_g_g_d[nn],tt$C_g_g_d[nn]))#
    text(0,ylimm[[2]][2],"b)",font=2,col="black")#
    return(list(results=tt,G=G,R=R,SDA=SDA,F=F,U=U))#
  }#
#
  mod1<-fig2v1()#
  ylimmIn<-list()#
  ylimmIn[[1]]<-c(-.001,3.5)#
  ylimmIn[[2]]<-c(-.001,0.14)#
  # this one plots C in g prey / g pred / day (a) and mass balance (b) in J/g/d #
#
fig2<-function(W=5,H=7,ylimm=ylimmIn){#
    Ttmp<-seq(-4,25,.1)#
    wtmp<-1000#
    Wuse<-1000#
    rtmp<-(PARMS_USE$RA*wtmp^PARMS_USE$RB)*exp(PARMS_USE$RQ*Ttmp)#
    data<-list(TempC=5,W=Wuse,Eprey=EpreyUse,Epred=HalibutED)#
    data.tmp<-list(TempC=Ttmp,W=Wuse,Eprey=EpreyUse,Epred=HalibutED,Pvalue=1)#
    tt<-Halibut_E(par=PARMS_USE,data=data.tmp)#
    tt2<-Halibut_E(par=PARMS_USE,data=list(TempC=Ttmp,W=Wuse,Eprey=EpreyUse,Epred=HalibutED,Pvalue=.5))#
    tt_alt<-Halibut_E(par=PARMS,data=data.tmp)#
    quartz(width=W, height=H)#
    par(mfrow=c(2,1))#
    par(mar=c(1,1,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3.5,3.5,2,2))# outer margins of graph: (bottom,left, top, right)#
    plot(tt$TempC,tt$C_gprey_gfish_d*100,type="l", ylim=ylimm[[1]],xlim=c(0,18),axes=FALSE,ylab="",xlab="",lwd=2)#
    lines(tt2$TempC,tt2$C_gprey_gfish_d*100,lty=2,lwd=2)#
    abline(v=PARMS_USE$Tco,lty=3)#
    abline(v=PARMS_USE$Tcm,lty=3)#
    abline(v=PARMS_USE$Qc,lty=3)#
    text(PARMS_USE$Tco-.4,ylimm[[1]][2]*.45,"Tco", srt =90,pos=3)#
    text(PARMS_USE$Tcm-.4,ylimm[[1]][2]*.45,"Tcm", srt =90,pos=3)#
    text(PARMS_USE$Qc-.4,ylimm[[1]][2]*.45,"Qc", srt =90,pos=3)#
    abline(h=0)#
    xatt<-seq(0,35,5)#
    axis(1,at=xatt,lab=rep("",length(xatt)));axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    mtext(expression(bold(paste("C (g"[prey]," g"[fish]^-1," d"^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    legend(-.7,ylimm[[1]][2]*.95, c("1.0", "0.5"),title="RFR",lty=c(1,2),lwd=2,box.lty=0,cex=1,bg="white")#
    text(0,ylimm[[1]][2],"a)",font=2,col="black")#
    #plot(tt$TempC,tt$C_g_g_d,type="l", xlim=c(0,18), ylim=ylimm[[2]],axes=FALSE,ylab="",xlab="")#
    plot(tt$TempC,tt$C_g_g_d*(tt$Epred/1000),type="l", xlim=c(0,18), ylim=ylimm[[2]],axes=FALSE,ylab="",xlab="")#
      nx<-length(tt$TempC)#
      xx<-c(tt$TempC,tt$TempC[nx:1])#
      G<-tt$G_g_g_d<-(tt$C_g_g_d-(tt$R_g_g_d*tt$ACT+tt$SDA_g_g_d+tt$F_g_g_d+tt$U_g_g_d))*(tt$Epred/1000)#
      R<-tt$R_g_g_d*tt$ACT*(tt$Epred/1000)#
      SDA<-tt$SDA_g_g_d*(tt$Epred/1000)#
      F<-tt$F_g_g_d*(tt$Epred/1000)#
      U<-tt$U_g_g_d*(tt$Epred/1000)#
    yy<-c(G+R+SDA+F+U,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[1])#
    maxU<-max.na(yy)#
    yy<-c(G+R+SDA+F ,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[2])#
    maxF<-max.na(yy)#
    yy<-c(G+R+SDA,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[3])#
    maxSDA<-max.na(yy)  #
    yy<-c(G+R,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[4])#
    maxR<-max.na(yy)#
    yy<-c(G,rep(0,nx))#
    xxyy<-na.omit(data.frame(xx=xx,yy=yy));polygon(xxyy[,1],xxyy[,2],col=col1(8)[6])#
    axis(1,at=xatt);axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-1,1))#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    mtext(expression(bold(paste("Rate (kJ g"^-1,d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    #mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1.2)#
    text(13,max.na(G)*.6,"Growth",font=2,col="white")#
    text(13,maxR*.9,"R*Act",font=2,col="white")#
    text(13,maxSDA*.94,"SDA",font=2,col="white")#
    text(13,maxF*.9,"F",font=2,col="white")#
    text(15.1,maxU*1.05,"U",font=2,col="black")#
    lines(c(13,14.8),c(maxU*.98,maxU*1.05))#
    lines(tt$TempC,tt$C_g_g_d*(tt$Epred/1000),lwd=2)#
    #lines(tt_alt$TempC,tt_alt$C_g_g_d,lwd=2)#
    nn<-which(tt$TempC==10)#
    text(7,1.1*tt$C_g_g_d[nn]*(tt$Epred/1000),expression(bold(paste("C"[max]))),font=2,col="black")#
    lines(c(7.5,10),c(1.05*tt$C_g_g_d[nn]*(tt$Epred/1000),tt$C_g_g_d[nn]*(tt$Epred/1000)))#
    text(0,ylimm[[2]][2],"b)",font=2,col="black")#
    return(list(results=tt,G=G,R=R,SDA=SDA,F=F,U=U))#
}#
#
mod<-fig2(W=5,H=6)#
#
if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig4.jpg"),dpi=dpii)   #
  graphics.off() #
  if(update.figs==1) write.table(data.frame(PARMS_USE),file=file.path(outfile.fig,"Table1.csv"))#
#
#________________________________________________________#
# Fig2 : oldplot temperature function#
#________________________________________________________#
  graphics.off()#
fig2old<-function(W=5,H=4){#
    dev.new(width=W, height=H)#
    par(mar=c(1,1,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3.5,3.5,2,2))# outer margins of graph: (bottom,left, top, right)#
    plot(tt$TempC,tt$f.T,type="l", xlim=c(0,18), ylim=c(0,1.2),axes=FALSE,ylab="",xlab="",lwd=2)#
    points(FTdat,pch=16)#
    axis(1);axis(1,at=c(-10,40))#
    axis(2,las=2);axis(2,at=c(-10,10))#
    abline(v=PARMS_USE$Tco,lty=3)#
    abline(v=PARMS_USE$Tcm,lty=3)#
    abline(v=PARMS_USE$Qc,lty=3)#
    text(PARMS_USE$Tco-.4,.9,"Tco", srt =90)#
    text(PARMS_USE$Tcm-.4,.9,"Tcm", srt =90)#
    text(PARMS_USE$Qc-.4,.9,"Qc", srt =90)#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=1,line=2)#
    mtext("f(T)",2,outer=FALSE,line=2.5,font=2,cex=1)#
  }#
  fig2old()#
#
if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"fT.jpg"),dpi=dpii)#
  graphics.off()
#________________________________________________________#
# Fig3#
#________________________________________________________#
getBydat<-function(yr=2015){#
    datlist<-list()#
      sub<-all.dat.A3#
      sub<-sub[sub$Year==yr,]#
      temp<-tapply(sub$Temp,as.character(sub$date),mean.na)#
      A3.dat<-data.frame(date=strptime(names(temp), format="%Y-%m-%d"),Temp=temp)#
      datlist[["A3.dat"]]<-A3.dat<-A3.dat[order(A3.dat$date),]#
      sub<-all.dat.4B#
      sub<-sub[sub$Year==yr,]#
      temp<-tapply(sub$Temp,as.character(sub$date),mean.na)#
      B4.dat<-data.frame(date=strptime(names(temp), format="%Y-%m-%d"),Temp=temp)#
      datlist[["B4.dat"]]<-B4.dat<-B4.dat[order(B4.dat$date),]#
      sub<-all.dat.4CD#
      sub<-sub[sub$Year==yr,]#
      temp<-tapply(sub$Temp,as.character(sub$date),mean.na)#
      CD4.dat<-data.frame(date=strptime(names(temp), format="%Y-%m-%d"),Temp=temp)#
      datlist[["CD4.dat"]]<-CD4.dat<-CD4.dat[order(CD4.dat$date),] #
      return(datlist)#
  }#
      regg<-c("4BS","3A","4CD") #
      cc<-which(as.character(t.adult$Reg)%in%c("4BS","3A","4CD") )#
      # xlimmIn<-c(as.Date(paste0(yr,"-06-01 PST")),as.Date(paste0(yr,"-06-01 PST"))#
fig3<-function(W=8,H=6,regs=c("B4.dat","A3.dat","CD4.dat"),ylimm=ylimmIn,xlimm=c("-01-1 00:00:00 GMT","-12-25 00:00:00 GMT"),lwdd=c(2,2,3),ltyy=c(1,1,1),yr=2015,#
    WInn=rep(W_mod,3),mnEIn=t.adult$mnEDJ_g[cc],pIn=t.adult$Pval[cc]){#
    tmp<-getBydat(yr); c(dim(tmp[[1]])[1],dim(tmp[[2]])[1],dim(tmp[[3]])[1])#
    all.dat<-all.mod<-list()#
    all.dat[[1]]<-tmp[[regs[1]]]#
    all.dat[[2]]<-tmp[[regs[2]]]#
    all.dat[[3]]<-tmp[[regs[3]]]#
    nd<-length(all.dat)#
    ll<-rep(0,nd)#
    for(i in 1:nd)#
      ll[i]<-dim(all.dat[[i]])[1]#
    for(i in which(ll>0))#
        all.mod[[i]]<-Bmodel(Tdat=all.dat[[i]],W0=WInn[i],preyEnergy=mnEIn[i],fishEnergy=HalibutED,PvalueIn=pIn[i])#
#
    xlimm2<-c(strptime(paste0(yr,xlimm[1]),format="%Y-%m-%d %H:%M:%S",tz="GMT"),strptime(paste0(yr,xlimm[2]),format="%Y-%m-%d %H:%M:%S",tz="GMT"))#
     x1<-(strptime(paste0(yr,xlimm[1]),format="%Y-%m-%d %H:%M:%S",tz="GMT"))#
     x2<-strptime(paste0(yr,xlimm[2]),format="%Y-%m-%d %H:%M:%S",tz="GMT")#
#
    dev.new(width=W, height=H)    #
    par(mar=c(3,5,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(2,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(2,2))#
    ii<-0#
    for(i in which(ll>0)){#
      ii<-ii+1#
      if(ii==1){#
          plot(data.frame(c(x1,x2),all.dat[[i]][1:2,2]),ylim=ylimm[[1]],las=2,ylab="",xlab="",las=2,col=FALSE)#
          lines(all.dat[[i]],type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }else{#
          lines(all.dat[[i]],type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }#
    }#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=2,line=2.5)#
    mtext(paste("a)",yr),font=2,cex=1.2,side=3,adj=0.02,line=-1.5)#
    legend(x1-(10*24*60*60),ylimm[[1]][2]*.95,c("3A (46080) ","4B (46070)","4C/D (46035)"),col=col1(nd),lwd=lwdd,lty=ltyy,box.lty=0)#
    ii<-0#
    for(i in which(ll>0)){#
      ii<-ii+1#
      if(ii==1){#
          #plot(all.mod[[i]]$date,all.mod[[i]]$R*100,type="l",lwd=lwdd[i],lty=ltyy[i],ylab="",xlab="",las=2, ylim=ylimm[[2]],xlim=xlimm,col=col1(nd)[i])#
          plot(data.frame(c(x1,x2),all.mod[[i]]$R[1:2]*100),ylim=ylimm[[2]],las=2,ylab="",xlab="",las=2,col=FALSE)#
          lines(all.mod[[i]]$date,all.mod[[i]]$R*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
#
      }else{#
          lines(all.mod[[i]]$date,all.mod[[i]]$R*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }#
    }#
     mtext("b)",font=2,cex=1.2,side=3,adj=0.02,line=-1.5)#
    mtext(expression(bold(paste("Respiration (% BW ",d^-1,")"))),side=2,line=2.5)#
    ii<-0#
    for(i in which(ll>0)){#
      ii<-ii+1#
      if(ii==1){#
          # plot(all.mod[[i]]$date,all.mod[[i]]$C*100,type="l",lwd=lwdd[i],lty=ltyy[i],ylab="",xlab="",las=2, ylim=ylimm[[3]],xlim=xlimm,col=col1(nd)[i])#
          plot(data.frame(c(x1,x2),all.mod[[i]]$C[1:2]*100),ylim=ylimm[[3]],las=2,ylab="",xlab="",las=2,col=FALSE)#
          lines(all.mod[[i]]$date,all.mod[[i]]$C*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }else{#
          lines(all.mod[[i]]$date,all.mod[[i]]$C*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }#
    }#
    mtext(expression(bold(paste("Consumption (% BW ",d^-1,")"))),side=2,line=2.5)#
    mtext("c)",font=2,cex=1.2,side=3,adj=0.02,line=-1.5)#
    ii<-0#
    for(i in which(ll>0)){#
      ii<-ii+1#
      if(ii==1){#
         # plot(all.mod[[i]]$date,all.mod[[i]]$G*100,type="l",lwd=lwdd[i],lty=ltyy[i],ylab="",xlab="",las=2, ylim=ylimm[[4]],xlim=xlimm,col=col1(nd)[i])#
          plot(data.frame(c(x1,x2),all.mod[[i]]$G[1:2]*100),ylim=ylimm[[4]],las=2,ylab="",xlab="",las=2,col=FALSE)#
          lines(all.mod[[i]]$date,all.mod[[i]]$G*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }else{#
          lines(all.mod[[i]]$date,all.mod[[i]]$G*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }#
    }#
    mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),side=2,line=2.5)#
     mtext("d)",font=2,cex=1.2,side=3,adj=0.02,line=-1.5)#
    abline(h=0)#
}#
  ylimmIn<-list()#
  ylimmIn[[1]]<-c(0,17)#
  ylimmIn[[2]]<-c(0,.3)#
  ylimmIn[[3]]<-c(0,1.8)#
  ylimmIn[[4]]<-c(-.10,.8)#
#
  fig3(yr=2016,xlimm=c("-01-15 00:00:00 GMT","-12-15 00:00:00 GMT"))#
   if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig3mn_sim2016.jpg"),dpi=dpii)   #
#
  fig3(yr=2005)#
   if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig3mn_sim1.jpg"),dpi=dpii)   #
#________________________________________________________#
# Fig4 :simulation plot#
#________________________________________________________#
#
fig4old<-function(W=8,H=6,ylimm=ylimmIn,lwdd=c(2,2,3),ltyy=c(1,1,1)){#
    dev.new(width=W, height=H)#
    par(mar=c(3,5,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(2,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(2,2))#
    plot(A3.dat,type="l",ylim=ylimm[[1]],lwd=lwdd[1],lty=ltyy[1],las=2,ylab="",xlab="",las=2,col=col1(3)[1])#
    lines(B4.dat,type="l",col=col1(3)[2],lwd=lwdd[2],lty=ltyy[2])#
    lines(CD4.dat,type="l",col=col1(3)[3],lwd=lwdd[3],lty=ltyy[3])#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=2,line=2.5)#
    text(A3.dat$date[10],ylimm[[1]][2]*.95,"a)",font=2,cex=1.2)#
    legend(A3.dat$date[10],ylimm[[1]][2]*.9,c("3A","3B","4C/D"),col=col1(3),lwd=lwdd,lty=ltyy,box.lty=0)#
    plot(A3.mod8$date,A3.mod8$W/1000,type="l",ylim=ylimm[[2]],lwd=lwdd[1],lty=ltyy[1],ylab="",xlab="",las=2,col=col1(3)[1])#
    lines(B4.mod8$date,B4.mod8$W/1000,type="l",col=col1(3)[2],lwd=lwdd[2],lty=ltyy[2])#
    lines(CD4.mod8$date,CD4.mod8$W/1000,type="l",col=col1(3)[3],lwd=lwdd[3],lty=ltyy[3])#
    text(A3.dat$date[10],ylimm[[2]][2]*.95,"b)",font=2,cex=1.2)#
    mtext("Weight (kg)",2,outer=FALSE,line=2.5,font=2,cex=1)#
    plot(A3.mod8$date,A3.mod8$C*100,type="l",lwd=lwdd[1],lty=ltyy[1],ylab="",xlab="",las=2,ylim=ylimm[[3]],col=col1(3)[1])#
    lines(B4.mod8$date,B4.mod8$C*100,type="l",col=col1(3)[2],lwd=lwdd[2],lty=ltyy[2])#
    lines(CD4.mod8$date,CD4.mod8$C*100,type="l",col=col1(3)[3],lwd=lwdd[3],lty=ltyy[3])#
    mtext(expression(bold(paste("Consumption (% BW ",d^-1,")"))),side=2,line=2.5)#
    text(A3.dat$date[10],ylimm[[3]][2]*.95,"c)",font=2,cex=1.2)#
    plot(A3.mod8$date,A3.mod8$G*100,type="l",lwd=lwdd[1],lty=ltyy[1],ylab="",xlab="",las=2,ylim=ylimm[[4]],col=col1(3)[1])#
    lines(B4.mod8$date,B4.mod8$G*100,type="l",col=col1(3)[2],lwd=lwdd[2],lty=ltyy[2])#
    lines(CD4.mod8$date,CD4.mod8$G*100,type="l",col=col1(3)[3],lwd=lwdd[3],lty=ltyy[3])#
    mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),side=2,line=2.5)#
    text(A3.dat$date[10],ylimm[[4]][2]*.95,"d)",font=2,cex=1.2)#
    abline(h=0)#
  }#
    ylimmIn<-list()#
  ylimmIn[[1]]<-c(0,17)#
  ylimmIn[[2]]<-c(0,10)#
  ylimmIn[[3]]<-c(0,1.8)#
  ylimmIn[[4]]<-c(-.10,1)#
 fig4<-function(W=8,H=6,regs=c("B4.dat","A3.dat","CD4.dat"),ylimm=ylimmIn,xlimm=c("-01-1 00:00:00 GMT","-12-25 00:00:00 GMT"),lwdd=c(2,2,3),ltyy=c(1,1,1),yr=2015,#
    WInn=rep(W_mod,3),mnEIn=t.adult$mnEDJ_g[cc],pIn=t.adult$Pval[cc]){#
    tmp<-getBydat(yr); c(dim(tmp[[1]])[1],dim(tmp[[2]])[1],dim(tmp[[3]])[1])#
    all.dat<-all.mod<-list()#
    all.dat[[1]]<-tmp[[regs[1]]]#
    all.dat[[2]]<-tmp[[regs[2]]]#
    all.dat[[3]]<-tmp[[regs[3]]]#
    nd<-length(all.dat)#
    ll<-rep(0,nd)#
    for(i in 1:nd)#
      ll[i]<-dim(all.dat[[i]])[1]#
    for(i in which(ll>0))#
        all.mod[[i]]<-Bmodel(Tdat=all.dat[[i]],W0=WInn[i],preyEnergy=mnEIn[i],fishEnergy=HalibutED,PvalueIn=pIn[i])#
#
    xlimm2<-c(strptime(paste0(yr,xlimm[1]),format="%Y-%m-%d %H:%M:%S",tz="GMT"),strptime(paste0(yr,xlimm[2]),format="%Y-%m-%d %H:%M:%S",tz="GMT"))#
     x1<-(strptime(paste0(yr,xlimm[1]),format="%Y-%m-%d %H:%M:%S",tz="GMT"))#
     x2<-strptime(paste0(yr,xlimm[2]),format="%Y-%m-%d %H:%M:%S",tz="GMT")#
#
    dev.new(width=W, height=H)    #
    par(mar=c(3,5,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(2,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(2,2))#
    ii<-0#
    for(i in which(ll>0)){#
      ii<-ii+1#
      if(ii==1){#
          plot(data.frame(c(x1,x2),all.dat[[i]][1:2,2]),ylim=ylimm[[1]],las=2,ylab="",xlab="",las=2,col=FALSE)#
          lines(all.dat[[i]],type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }else{#
          lines(all.dat[[i]],type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }#
    }#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=2,line=2.5)#
    mtext(paste("a)",yr),font=2,cex=1.2,side=3,adj=0.02,line=-1.5)#
    legend(x1-(10*24*60*60),ylimm[[1]][2]*.95,c("3A (46080) ","4B (46070)","4C/D (46035)"),col=col1(nd),lwd=lwdd,lty=ltyy,box.lty=0)#
    ii<-0#
    for(i in which(ll>0)){#
      ii<-ii+1#
      if(ii==1){#
          #plot(all.mod[[i]]$date,all.mod[[i]]$R*100,type="l",lwd=lwdd[i],lty=ltyy[i],ylab="",xlab="",las=2, ylim=ylimm[[2]],xlim=xlimm,col=col1(nd)[i])#
          plot(data.frame(c(x1,x2),all.mod[[i]]$W[1:2]/1000),ylim=ylimm[[2]],las=2,ylab="",xlab="",las=2,col=FALSE)#
          lines(all.mod[[i]]$date,all.mod[[i]]$W/1000,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
#
      }else{#
          lines(all.mod[[i]]$date,all.mod[[i]]$W/1000,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }#
    }#
     mtext("b)",font=2,cex=1.2,side=3,adj=0.02,line=-1.5)#
    mtext(expression(bold("Weight (kg)")),side=2,line=2.5)#
    ii<-0#
    for(i in which(ll>0)){#
      ii<-ii+1#
      if(ii==1){#
          # plot(all.mod[[i]]$date,all.mod[[i]]$C*100,type="l",lwd=lwdd[i],lty=ltyy[i],ylab="",xlab="",las=2, ylim=ylimm[[3]],xlim=xlimm,col=col1(nd)[i])#
          plot(data.frame(c(x1,x2),all.mod[[i]]$C[1:2]*100),ylim=ylimm[[3]],las=2,ylab="",xlab="",las=2,col=FALSE)#
          lines(all.mod[[i]]$date,all.mod[[i]]$C*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }else{#
          lines(all.mod[[i]]$date,all.mod[[i]]$C*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }#
    }#
    mtext(expression(bold(paste("Consumption (% BW ",d^-1,")"))),side=2,line=2.5)#
    mtext("c)",font=2,cex=1.2,side=3,adj=0.02,line=-1.5)#
    ii<-0#
    for(i in which(ll>0)){#
      ii<-ii+1#
      if(ii==1){#
         # plot(all.mod[[i]]$date,all.mod[[i]]$G*100,type="l",lwd=lwdd[i],lty=ltyy[i],ylab="",xlab="",las=2, ylim=ylimm[[4]],xlim=xlimm,col=col1(nd)[i])#
          plot(data.frame(c(x1,x2),all.mod[[i]]$G[1:2]*100),ylim=ylimm[[4]],las=2,ylab="",xlab="",las=2,col=FALSE)#
          lines(all.mod[[i]]$date,all.mod[[i]]$G*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }else{#
          lines(all.mod[[i]]$date,all.mod[[i]]$G*100,type="l",col=col1(nd)[i],lwd=lwdd[i],lty=ltyy[i])#
      }#
    }#
    mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),side=2,line=2.5)#
     mtext("d)",font=2,cex=1.2,side=3,adj=0.02,line=-1.5)#
    abline(h=0)#
  }#
#
  fig4(yr=2016)#
   if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig4max_sim2016.jpg"),dpi=500) #
  fig4(yr=2005)#
   if(update.figs==1) quartz.save(type="jpeg",file=file.path(outfile.fig,"01_Fig4max_sim1.jpg"),dpi=500) #
  graphics.off() #
#
#________________________________________________________#
# Fig5 : model applied to bouy data#
#________________________________________________________#
  # for(i in 1:n){#
  #   #
  #   if(i==1) subsub<-sub.4CD#
  #   if(i==2) subsub<-sub.3A#
  #   if(i==3) subsub<-sub.4B#
  #   if(juv==TRUE){#
  #     subsub<-subsub[subsub$L<40,]#
  #   }else{#
  #     subsub<-subsub[subsub$L>=40&subsub$L<=80,]#
  #   }#
  #   #
  #   # subsub<-subsub1[grep(arealist[i],subsub1$ECOPATH_PP),]#
  #   tt<-tapply(subsub[,cc],subsub$Yr,mean,na.rm=TRUE)#
  #   tt.sd<-tapply(subsub[,cc],subsub$Yr,sd,na.rm=TRUE)#
  #   tt.n<-tapply(subsub[,cc],subsub$Yr,length.na)#
  #   tt.se<-abs(tt.sd/sqrt(tt.n))#
  #   yy<-as.numeric(names(tt))#
  #   ttu<-tt+1.95*(tt.se)#
  #   ttl<-tt-1.95*(tt.se)#
  #   bounds<-na.omit(data.frame(ttu,ttl))#
  #   yy<-rownames(bounds)#
  #   xx.tt<-as.numeric(names(tt))#
  #   #
  #   if(logg==TRUE){#
  #     tt 		<-tapply(log(subsub[,cc]+0.001),subsub$Yr,mean,na.rm=TRUE)#
  #     tt.sd 	<-tapply(log(subsub[,cc]+0.001),subsub$Yr,sd,na.rm=TRUE)#
  #     tt.n 	<-tapply((subsub[,cc]),subsub$Yr,length.na)#
  #     tt.se 	<-abs(tt.sd/sqrt(tt.n))#
  #     yy 		<-as.numeric(names(tt))#
  #     ttu 	<-exp(tt+1.95*(tt.se))#
  #     ttl 	<-exp(tt-1.95*(tt.se))#
  #     tt 		<-exp(tt-0.001)#
  #     bounds<-na.omit(data.frame(ttu,ttl))#
  #     yy<-rownames(bounds)#
  #     xx.tt<-as.numeric(names(tt))#
  #     #
  #   }#
  #   #
  #   lines(xx.tt,tt,type="b",col=cols[i],pch=pchh[i],lty=ltyy[i],lwd=lwdd[i])#
  #   #
  # }#
#
fig5.new<-function(ylabb=TRUE,ytickk=TRUE,alpha=c(50,100),H=6,W=5,pnlabb=c("a)","b)","c)","d)"),juv=TRUE,n=2,jtr=.2,opt=1,poly=FALSE,cols=col1(5)[3:5],#
    cols_border=c(col1(1),col1(1)),ltyy=c(1,1),lwdd=c(1,2),pchh=c(16,15)){#
    arealist<-c("East","West")#
    #cols<-col1(6)[c(1,3,6)]#
    #c4<-colorRampPalette(c("orange","red"))#
    #cols<-c(col1(5)[3],col1(5)[3],c4(2)[2])#
    #ltyy=c(1,1,1);lwdd=c(2,2,2)#
    xat<-seq(1980,2015,5)#
    ylimm<-c(4000,5500)#
    reglist<-c("4CD","3A","3B")#
    plot_sub<-function(var="mnEDJ_g",ylimm=c(4000,5500),logg=FALSE,xlimm=c(1980,2017),pnlab=NA,returnMod=FALSE){#
      cc<-grep(var,colnames(sub.preyED))#
      ### mean Energy density#
      ttm<-lnlist<-list()#
      for(i in 1:n){#
        if(i==1) sub<-data.frame(sub.4CD)#
        if(i==2) sub<-data.frame(sub.3A)#
        if(i==3) sub<-data.frame(sub.4B)#
        if(juv==TRUE){#
          subsub<-sub[sub$L<40,]#
        }else{#
          subsub<-sub[sub$L>=40&sub$L<=80,]#
        }#
        rm(sub)#
        yrindx<-(1980:2015)#
        # subsub<-subsub1[grep(arealist[i],subsub1$ECOPATH_PP),]#
        if(logg!=TRUE){#
          tt<-tapply(subsub[,cc],subsub$Yr,mean,na.rm=TRUE)#
          tt.sd<-tapply(subsub[,cc],subsub$Yr,sd,na.rm=TRUE)#
          tt.n<-tapply(subsub[,cc],subsub$Yr,length.na)#
          tt.se<-abs(tt.sd/sqrt(tt.n))#
          ttu<-tt+1.95*(tt.se)#
          ttl<-tt-1.95*(tt.se)#
          xx.tt<-as.numeric(names(tt))#
          ttm[[i]]<-lm(subsub[,cc]~match(subsub$Yr,yrindx))#
        }#
        if(logg==TRUE){#
          tt 		<-tapply(log(subsub[,cc]+0.001),subsub$Yr,mean,na.rm=TRUE)#
          tt.sd 	<-tapply(log(subsub[,cc]+0.001),subsub$Yr,sd,na.rm=TRUE)#
          tt.n 	<-tapply((subsub[,cc]),subsub$Yr,length.na)#
          tt.se 	<-abs(tt.sd/sqrt(tt.n))#
          ttu 	<-exp(tt+1.95*(tt.se))#
          ttl 	<-exp(tt-1.95*(tt.se))#
          tt 		<-exp(tt-0.001)#
          xx.tt<-as.numeric(names(tt))#
          ttm[[i]]<-lm(log(subsub[,cc]+0.001)~match(subsub$Yr,yrindx))#
        }#
        if(i>1) xx.tt<-xx.tt+jtr#
        ttER<-cbind(ttu,ttl)#
        ttu<-apply(ttER,1,max.na)#
        ttl<-apply(ttER,1,min.na)#
        ttu[tt.n<=1|is.na(tt.n)]<-ylimm[2]+(ylimm[2]-ylimm[1])#
        ttl[tt.n<=1|is.na(tt.n)]<-ylimm[1]-(ylimm[2]-ylimm[1])#
#
        bounds<-(data.frame(ttu,ttl))#
        yy<-rownames(bounds)#
        yat<-pretty( seq(ylimm[1],ylimm[2],(ylimm[2]-ylimm[1])/10) )#
#
        if(i==1){#
          plot(xx.tt,tt,ylab="",axes=FALSE,type="b",xlim=xlimm,#
               ylim=ylimm,pch=pchh[i],col=cols[i],lty=ltyy[i],lwd=lwdd[i])			#
          if(ytickk!=TRUE){#
            axis(2,las=2,at=yat,labels=rep("",length(yat)))#
          }else{#
            axis(2,las=2,at=yat)#
          }#
          axis(2,at=c(-1e5,1e5))#
          axis(1,at=xat,lab=rep("",length(xat)));axis(1,at=c(0,3000))#
          #abline(h=mean.na(subsub[,cc]),col=makeTransparent(cols[i],alpha=alpha1),lty=ltyy[i],lwd=lwdd[i])#
        }#
        #lines(xx.tt,ttu,lty=3)#
        #lines(xx.tt,ttl,lty=3)#
        if(poly==TRUE) polygon(c(xx.tt,rev(xx.tt)),c(bounds[,1],rev(bounds[,2])),col=makeTransparent(cols_border[i],alpha=alpha[i]),border=F)#
       # lines(xx.tt,tt,type="b",col=cols[i],pch=pchh[i],lty=ltyy[i],lwd=lwdd[i])#
        if(poly!=TRUE){#
          for(ii in 1:dim(bounds)[1]){#
            if(is.na(tt.n[ii])==FALSE){#
              if(tt.n[ii]>1){#
              lines(c(xx.tt[ii],xx.tt[ii]),c(bounds[ii,1],bounds[ii,2]),#
                    col=cols[i],lty=1,lwd=lwdd[i])#
              points(xx.tt[ii],tt[ii],col=cols[i],pch=pchh[i],lty=1,lwd=lwdd[i])#
              points(xx.tt[ii],tt[ii],col=cols[i],pch=-10,lty=1,lwd=lwdd[i])#
              lines(xx.tt[ii]+c(-.2,+.2),rep(bounds[ii,1],2),col=cols[i],lty=1,lwd=lwdd[i])#
              lines(xx.tt[ii]+c(-.2,+.2),rep(bounds[ii,2],2),col=cols[i],lty=1,lwd=lwdd[i])#
              }#
            }#
          }#
        }#
        lnlist[[i]]<-data.frame(xx.tt,tt)#
        #abline(h=mean.na(subsub[,cc]),col=makeTransparent(cols[i],alpha=alpha1),lty=ltyy[i],lwd=lwdd[i])#
      }#
      for(i in 1:n){#
        lines(lnlist[[i]]$xx.tt,lnlist[[i]]$tt,type="b",col=cols[i],pch=pchh[i],lty=ltyy[i],lwd=lwdd[i])#
      }#
      if(is.na(pnlab)==FALSE)#
        text(x=xlimm[2],y=ylimm[2],pnlab)#
      if(returnMod) return(ttm)#
    }#
    plot_sub("mnEDJ_g",ylimm=ylimmA[[1]],pnlab=pnlabb[1])#
    #legend("topright",arealist,col=cols,lty=ltyy,lwd=lwdd,box.lty=0)#
    legend("topleft",reglist[1:n],col=cols[1:n],lty=ltyy[1:n],lwd=lwdd[1:n],pch=pchh[1:n],box.lty=0)	#
    if(ylabb){#
      mtext(side=2,"Diet Energy",line=4.4)#
      mtext(side=2,expression(paste("(J ",g[prey]^-1,")")),line=2.5)#
    }#
    plot_sub(var="tot_C_J_gpred",ylimm=ylimmA[[2]],pnlab=pnlabb[2])#
    if(ylabb){#
      mtext(side=2,"Consumed Energy",line=4.4)#
      mtext(side=2,expression(paste("(J ",g[fish]^-1," )")),line=2.5)#
    }#
    tttt<-plot_sub("Pvalue",ylimm=ylimmA[[3]],logg=TRUE,pnlab=pnlabb[3],returnMod=TRUE)	#
    if(ylabb) mtext(side=2,"RFR",line=3)#
    #plot_sub("G_index",ylimm=c(-1,1))		#
    #	mtext(side=2,"G index",line=3)#
    # plot_sub("G_hat",ylimm=c(-.001,.015))		#
    # 	mtext(side=2,"Growth ",line=4.3)#
    # 	mtext(side=2,expression(paste("(g ",g^-1,d^-1," predator )")),line=2.5)#
    if(opt==1){	#
      plot_sub("G_effic",ylimm=ylimmA[[4]], logg=T,pnlab=pnlabb[4],returnMod=F)#
      if(ylabb) mtext(side=2,"Growth efficiency",line=3)#
    }#
    if(opt==2){	#
      plot_sub("G_scope",ylimm=ylimmA[[4]],pnlab=pnlabb[4],returnMod=F)#
      if(ylabb) mtext(side=2,"Scope for growth",line=3)	#
    }#
    if(opt==3){	#
     plot_sub("G_hat",ylimm=ylimmA[[4]],pnlab=pnlabb[4],returnMod=F)#
      if(ylabb){ #
        mtext(side=2,"Potential G",line=4.4)#
        mtext(side=2,expression(paste("( g"[fish]," g"[fish]^-1," d"^-1,")")),line=2.5)	#
      }#
    }#
    axis(1,at=xat)#
    return(tttt)#
  }#
  dev.new(height=6,width=5)#
    par(mar=c(1,5,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(2,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(4,1)) #
  ylimmA<-list()#
  ylimmA[[1]]<-c(3000,7500)#
  ylimmA[[2]]<-c(0,300)#
  ylimmA[[3]]<-c(0,1.2)#
  ylimmA[[4]]<-c(-.005,.035)#
  RFRmod_juv<-fig5.new(H=6.5,W=5,n=2,opt=3,poly=FALSE);mtext(side=3,"Juvenile",font=2,outer=T)#
  abline(h=0)#
   if(update.figs==1) quartz.save(file=file.path(outfile.fig,"Fig5juv.jpg"),type="jpeg",dpi=500)#
  ylimmA[[3]]<-c(0,1)#
  ylimmA[[4]]<-c(-.005,.01)#
  RFRmod_adult<-fig5.new(H=6.5,W=5,juv=FALSE,n=2,alpha=c(50,100),opt=3);mtext(side=3,"Adult",font=2,outer=T)#
  abline(h=0)#
#
   if(update.figs==1) quartz.save(file=file.path(outfile.fig,"Fig5adult.jpg"),type="jpeg",dpi=500)#
  ylimmA[[4]]<-c(0,1)#
  fig5.new(H=6.5,W=5,n=2,opt=1);mtext(side=3,"Juvenile",font=2,outer=T)#
   if(update.figs==1) quartz.save(file=file.path(outfile.fig,"Fig5juvV2.jpg"),type="jpeg",dpi=500)#
  fig5.new(H=6.5,W=5,juv=FALSE,n=2,opt=1);mtext(side=3,"Adult",font=2,outer=T)#
   if(update.figs==1) quartz.save(file=file.path(outfile.fig,"Fig5adultV2.jpg"),type="jpeg",dpi=500)	#
  dev.new(height=6.5,width=6)#
    par(mar=c(1,3,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(2,5,2,1))# outer margins of graph: (bottom,left, top, right)#
    #par(mfrow=c(4,2)) #
    layout( cbind(c(1,2,3,4),c(5,6,7,8)) )#
    layout.show(8)#
  ylimmA[[4]]<-c(-.005,.035)#
    fig5.new(H=6.5,W=5,n=2,opt=3,poly=FALSE,pnlabb=c("a)","b)","c)","d)")); abline(h=0) #
  ylimmA[[4]]<-c(-.001,.008)  #
    fig5.new(ylabb=FALSE,ytickk=TRUE,H=6.5,W=5,juv=FALSE,n=2,alpha=c(50,100),opt=3,pnlabb=c("e)","f)","g)","h)")); abline(h=0)#
  mtext(side=3,"Juvenile",font=2,outer=T,adj=.2)#
  mtext(side=3,"Adult",font=2,outer=T,adj=.8)#
  if(update.figs==1) quartz.save(file=file.path(outfile.fig,"01_Fig5.jpg"),type="jpeg",dpi=500)#
#
    ylimmA[[4]]<-c(0,1)#
  fig5.new(H=6.5,W=5,n=2,opt=1)#
  fig5.new(H=6.5,W=5,juv=FALSE,ylabb=FALSE,ytickk=FALSE,n=2,opt=1,pnlabb=c("e)","f)","g)","h)"))#
  mtext(side=3,"Juvenile",font=2,outer=T,adj=.2)#
  mtext(side=3,"Adult",font=2,outer=T,adj=.8)#
   if(update.figs==1) quartz.save(file=file.path(outfile.fig,"01_Fig5v2.jpg"),type="jpeg",dpi=500)  #
    ylimmA[[4]]<-c(0,1)#
  fig5.new(H=6.5,W=5,n=2,opt=1,poly=TRUE)#
  fig5.new(H=6.5,ytickk=FALSE,ylabb=FALSE,W=5,juv=FALSE,n=2,opt=1,poly=TRUE,pnlabb=c("e)","f)","g)","h)"))#
  mtext(side=3,"Juvenile",font=2,outer=T,adj=.2)#
  mtext(side=3,"Adult",font=2,outer=T,adj=.8)#
   if(update.figs==1) quartz.save(file=file.path(outfile.fig,"01_Fig5v3.jpg"),type="jpeg",dpi=500)  #
    ylimmA[[4]]<-c(-.005,.02)#
  fig5.new(H=6.5,W=5,n=2,opt=3,poly=TRUE)#
  fig5.new(H=6.5,ytickk=FALSE,ylabb=FALSE,W=5,juv=FALSE,n=2,opt=3,poly=TRUE,pnlabb=c("e)","f)","g)","h)"))#
  mtext(side=3,"Juvenile",font=2,outer=T,adj=.2)#
  mtext(side=3,"Adult",font=2,outer=T,adj=.8)#
   if(update.figs==1) quartz.save(file=file.path(outfile.fig,"01_Fig54.jpg"),type="jpeg",dpi=500)  #
#
  graphics.off()#
#
#________________________________________________________#
# Fig6 : model applied to bouy data#
#________________________________________________________#
plotresults<-function(what="allR*100",type="B4",newplot=1,ylimm=c(.2,.4),xlimm=c(startday1,endday1),coluse=col1,axis1=FALSE,alpha1=100){#
    eval(parse(text=paste("ttmp<-",type,".Temp.all",sep="")))#
    yrs<-names(ttmp)#
    ny<-length(yrs)#
    for(y in 1:length(yrs)){#
      if(is.na(ttmp)[y]){#
        if(newplot==1&y==1){#
          plot(0,0,type="l",ylim=ylimm,xlim=xlimm,lwd=2,las=2,ylab="",xlab="",las=2,col=makeTransparent(coluse(ny)[y],alpha=0),axes=FALSE)#
        }else{#
          # skip #
        }#
      }else{#
        sub<-ttmp[[y]]#
        eval(parse(text=paste("temp<-tapply(sub$",what,",as.character(sub$date),mean.na)",sep="")))#
        date.tmp<-strptime(names(temp), format="%Y-%m-%d")#
        t.dat<-data.frame(date=date.tmp,jday=date.tmp$yday+1,Temp=temp)#
        t.dat<-t.dat[order(t.dat$date),]#
        nd<-length(t.dat$date)	#
        #t1<-strptime(xlimm, format="%Y-%m-%d")$yday+1#
        if(newplot==1&y==1){#
          plot(t.dat[,2],t.dat[,3],type="l",ylim=ylimm,xlim=xlimm,lwd=2,las=2,ylab="",xlab="",las=2,col=makeTransparent(coluse(ny)[y],alpha=alpha1),axes=FALSE)#
        }else{#
          lines(t.dat[,2],t.dat[,3],type="l",col=makeTransparent(coluse(ny)[y],alpha=alpha1),lwd=2)#
        }#
      }	#
    }#
    mons<-c("Jan","Feb")#
    ts<-strptime("2009-1-1",format="%Y-%m-%d")#
    days<-(xlimm[1]-1):xlimm[2]#
    dates<-(days-1)*24*60*60+ts#
    xatt.lab<-strptime(pretty(dates,4),format="%Y-%m-%d")#
    xatt.lab2<-paste(months(xatt.lab,abbreviate=TRUE),xatt.lab$mday,sep=" ")#
    xatt<-xatt.lab$yday+1		#
    axis(1,at=c(-100,500))#
    if(axis1==TRUE){ axis(1,at=xatt,lab=xatt.lab2,las=2)}else{axis(1,at=xatt,lab=rep("",length(xatt)),las=2)}#
    axis(2,at=c(-1000,1000));axis(2,las=2)#
}#
#
plotresults2<-function(what="allR*100",ttmp=m1,newplot=1,ylimm=c(.2,.4),xlimm=c(startday1,endday1),coluse=col1,axis1=FALSE,alpha1=100){#
    # eval(parse(text=paste("ttmp<-",type,".Temp.all",sep="")))#
    yrs<-names(ttmp)#
    ny<-length(yrs)#
    for(y in 1:length(yrs)){#
      if(is.na(ttmp)[y]){#
        if(newplot==1&y==1){#
          plot(0,0,type="l",ylim=ylimm,xlim=xlimm,lwd=2,las=2,ylab="",xlab="",las=2,col=makeTransparent(coluse(ny)[y],alpha=0),axes=FALSE)#
        }else{#
          # skip #
        }#
      }else{#
        sub<-ttmp[[y]]#
        eval(parse(text=paste("temp<-tapply(sub$",what,",as.character(sub$date),mean.na)",sep="")))#
        date.tmp<-strptime(names(temp), format="%Y-%m-%d")#
        t.dat<-data.frame(date=date.tmp,jday=date.tmp$yday+1,Temp=temp)#
        t.dat<-t.dat[order(t.dat$date),]#
        nd<-length(t.dat$date)	#
        #t1<-strptime(xlimm, format="%Y-%m-%d")$yday+1#
        if(newplot==1&y==1){#
          plot(t.dat[,2],t.dat[,3],type="l",ylim=ylimm,xlim=xlimm,lwd=2,las=2,ylab="",xlab="",las=2,col=makeTransparent(coluse(ny)[y],alpha=alpha1),axes=FALSE)#
        }else{#
          lines(t.dat[,2],t.dat[,3],type="l",col=makeTransparent(coluse(ny)[y],alpha=alpha1),lwd=2)#
        }#
      }	#
    }#
    mons<-c("Jan","Feb")#
    ts<-strptime("2009-1-1",format="%Y-%m-%d")#
    days<-(xlimm[1]-1):xlimm[2]#
    dates<-(days-1)*24*60*60+ts#
    xatt.lab<-strptime(pretty(dates,4),format="%Y-%m-%d")#
    xatt.lab2<-paste(months(xatt.lab,abbreviate=TRUE),xatt.lab$mday,sep=" ")#
    xatt<-xatt.lab$yday+1		#
    axis(1,at=c(-100,500))#
    if(axis1==TRUE){ axis(1,at=xatt,lab=xatt.lab2,las=2)}else{axis(1,at=xatt,lab=rep("",length(xatt)),las=2)}#
    axis(2,at=c(-1000,1000));axis(2,las=2)#
  }#
  fig6<-function(W=8,H=6, alpha=200){#
    quartz(width=W, height=H)#
    par(mar=c(1,4,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(2,2))#
    plotresults(alpha1=alpha,what="Temp",type="B4",coluse=col1,ylimm=c(0,15))#
    plotresults(alpha1=alpha,what="Temp",type="A3",newplot=0,coluse=col1)#
    plotresults(alpha1=alpha,what="Temp",type="CD4",newplot=0,coluse=col3)#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=2,line=2.5)#
    mtext("a)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    abline(h=PARMS_USE$Tco,lty=2,col=colors()[320])#
    plotresults(alpha1=alpha,what="allR*100",type="B4",coluse=col1,ylimm=c(0,.6))#
    plotresults(alpha1=alpha,what="allR*100",type="A3",newplot=0,coluse=col1)#
    plotresults(alpha1=alpha,what="allR*100",type="CD4",newplot=0,coluse=col3)#
    mtext("b)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    mtext(expression(bold(paste("Resp (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    plotresults(alpha1=alpha,what="C*100",type="B4",coluse=col1,ylimm=c(0,1),axis1=TRUE)#
    plotresults(alpha1=alpha,what="C*100",type="A3",newplot=0,coluse=col1)	#
    plotresults(alpha1=alpha,what="C*100",type="CD4",newplot=0,coluse=col3)	#
    mtext(expression(bold(paste("Consumption (% BW ",d^-1,")"))),side=2,line=2.5)#
    mtext("c)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    yrs<-names(A3.Temp.all);ny<-length(yrs)#
    yrs2<-names(B4.Temp.all);ny2<-length(yrs2)#
    x1<-.91;x2<-.98#
    px<-endday1*seq(x1,x2,.005);nx<-length(px)#
    px<-endday1*seq(x1,x2,(x2-x1)/(ny-1))#
    points(px,rep(.3,ny),col=col1(ny),pch=15) #.08#
    points(px,rep(.1,ny),col=c("white","white",col1(ny2)[1:(ny2-1)],"white",col1(ny2)[ny2]),pch=15) #.0665#
    for(y in 1:ny)#
      text(px[y],.2,yrs[y],srt=90,cex=.7) #.073#
    text(px[1],.3,"3A",cex=.7,pos=2) #.078#
    text(px[1],.1,"4B",cex=.7,pos=2) #.0665#
    plotresults(alpha1=alpha,what="G*100",type="B4",coluse=col1,ylimm=c(-.01,.14),axis1=TRUE)#
    plotresults(alpha1=alpha,what="G*100",type="A3",newplot=0,coluse=col1)#
    plotresults(alpha1=alpha,what="G*100",type="CD4",newplot=0,coluse=col3)#
    mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),side=2,line=2.5)#
    mtext("d)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    abline(h=0)#
  }#
#
plot_mod2<-function(t1=t.juv,Win=8000,W=8,H=6,x1=.72,x2=1,alpha=200,inc4b=F,#
    startd=strptime("2009-7-1",format="%Y-%m-%d")$yday+1,#
    endd=strptime("2009-9-1",format="%Y-%m-%d")$yday+1){#
    startday1<-startd#
    endday1<-endd#
    # W0use1<-W0use2<-8000#1000#
    W0use1<-W0use2<-Win#100#
    cc<-grep("4B",t1$Reg)#
    B4tmp<-getresults(tempdata=all.dat.4B,puse=t1$Pval[cc],penergy=t1$mnEDJ_g[cc],W0use=W0use1)#
    B4yr<-as.numeric(names(B4tmp))#
    cc<-grep("3A",t1$Reg)#
    A3tmp<-getresults(tempdata=all.dat.A3,puse=t1$Pval[cc],penergy=t1$mnEDJ_g[cc],W0use=W0use1)#
    A3yr<-as.numeric(names(A3tmp))#
    cc<-grep("4CD",t1$Reg)#
    CD4tmp<-getresults(tempdata=all.dat.4CD,puse=t1$Pval[cc],penergy=t1$mnEDJ_g[cc],W0use=W0use1)#
    CD4yr<-as.numeric(names(CD4tmp))#
    col1=colorRampPalette(colors()[c(104,496,497)])#
    col2=colorRampPalette(colors()[c(408,44,73)])#
    col3=colorRampPalette(colors()[c(20,76,133)])#
    quartz(width=W, height=H)#
    par(mar=c(1,4,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(2,2))#
    plotresults2(alpha1=alpha,what="Temp",ttmp=A3tmp,coluse=col1,ylimm=c(0,15))#
    if(inc4b) plotresults2(alpha1=alpha,what="Temp",ttmp=B4tmp,newplot=0,coluse=col3)#
    plotresults2(alpha1=alpha,what="Temp",ttmp=CD4tmp,newplot=0,coluse=col2)#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=2,line=2.5)#
    mtext("a)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    abline(h=PARMS_USE$Tco,lty=2,col=colors()[320])#
    plotresults2(alpha1=alpha,what="allR*100",ttmp=A3tmp,coluse=col1,ylimm=c(0,.8))#
    if(inc4b) plotresults2(alpha1=alpha,what="allR*100",ttmp=B4tmp,newplot=0,coluse=col3)#
    plotresults2(alpha1=alpha,what="allR*100",ttmp=CD4tmp,newplot=0,coluse=col2)#
    mtext("b)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    mtext(expression(bold(paste("Resp (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    plotresults2(alpha1=alpha,what="C*100",ttmp=A3tmp,coluse=col1,ylimm=c(0,1.8),axis1=TRUE)#
    if(inc4b) plotresults2(alpha1=alpha,what="C*100",ttmp=B4tmp,newplot=0,coluse=col3)	#
    plotresults2(alpha1=alpha,what="C*100",ttmp=CD4tmp,newplot=0,coluse=col2)	#
    mtext(expression(bold(paste("Consumption (% BW ",d^-1,")"))),side=2,line=2.5)#
    mtext("c)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    yrs<-names(A3.Temp.all);ny<-length(yrs)#
    yrs2<-names(B4.Temp.all);ny2<-length(yrs2)#
    yrs<-sort(unique(c(CD4yr,A3yr,B4yr)))#
    yr<-min(yrs):max(yrs)#
    cols1<-rep("white",length(yr));cols1[(yr%in%A3yr)]<-col1(length(A3yr))#
    cols2<-rep("white",length(yr));cols2[(yr%in%CD4yr)]<-col2(length(CD4yr))#
    cols3<-rep("white",length(yr));cols3[(yr%in%B4yr)]<-col3(length(B4yr))#
    ny<-length(yr)#
    px<-endday1*seq(x1,x2,.005);nx<-length(px)#
    px<-endday1*seq(x1,x2,(x2-x1)/(ny-1))#
    points(px,rep(.2,ny),col=cols1,pch=15) #.0665#
    points(px,rep(.12,ny),col=cols2,pch=15) #.08#
    if(inc4b) points(px,rep(.04,ny),col=cols3,pch=15) #.08#
    for(y in 1:ny)#
      text(px[y],.34,yr[y],srt=90,cex=.7) #.073#
    text(px[1],.2,"3A",cex=.7,pos=2) #.078#
    text(px[1],.11,"4CD",cex=.7,pos=2) #.078#
    if(inc4b) text(px[1],.03,"4B",cex=.7,pos=2) #.0665#
    plotresults2(alpha1=alpha,what="G*100",ttmp=A3tmp,coluse=col1,ylimm=c(-.01,.14),axis1=TRUE)#
    if(inc4b) plotresults2(alpha1=alpha,what="G*100",ttmp=B4tmp,newplot=0,coluse=col3)#
    plotresults2(alpha1=alpha,what="G*100",ttmp=CD4tmp,newplot=0,coluse=col2)#
    mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),side=2,line=2.5)#
    mtext("d)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    abline(h=0)#
}
plot_mod<-function(#
                  col1=colorRampPalette(colors()[c(104,496,497)]),#
                  col2=colorRampPalette(colors()[c(408,44,73)]),#
                  col3=colorRampPalette(colors()[c(20,76,133)]),#
                  t1=tyr.juv,#
                  by.y=TRUE,#
                  years=2002:2017,#
                  t2=t.juv,#
                  ll=c(1.2,3,2.3,0.03),#
                  glimm=c(0,.34),#
                  climm=c(0,2.5),#
                  Win=8000,#
                  W=8,H=6,#
                  x1=.82,x2=1,#
                  alpha=200,#
                  inc4b=F,#
                  startd=strptime("2009-7-1",format="%Y-%m-%d")$yday+1,#
                  endd=strptime("2009-9-1",format="%Y-%m-%d")$yday+1){#
    startday1<-startd#
    l1<-ll[1]#
    l2<-ll[2]#
    l3<-ll[3]#
    l4<-ll[4]#
    endday1<-endd#
    # W0use1<-W0use2<-8000#1000#
    W0use1<-W0use2<-Win#100#
    # years<-sort(unique(all.dat.A3$Year));years<-years[years>1000]#
    assignP<-function(reg){#
      meanP<-t2$Pval[t2$Reg==reg]#
      pvalin<-rep(meanP,length(years))#
      names(pvalin)<-years#
      meanED<-t2$mnEDJ_g[t2$Reg==reg]#
      EDin<-rep(meanED,length(years))#
      names(EDin)<-years#
      cc<-which(years%in%as.numeric(rownames(t1[[reg]])))#
      suby<-years[cc]#
      if(by.y==TRUE){#
        for(yyy in 1:length(suby)){#
          mtch<-match(suby[yyy],as.numeric(rownames(t1[[reg]])))#
          if(is.na(mtch)){#
            pvalin[cc][yyy]<-NA#
            EDin[cc][yyy]<-NA#
          }else{#
            pvalin[cc][yyy]<-t1[[reg]]$Pval[mtch]#
            EDin[cc][yyy]<-t1[[reg]]$mnEDJ_g[mtch]#
          }#
        }#
      }#
      return(list(suby=suby,pvalin=pvalin,EDin=EDin))#
    }#
    tmpP<-assignP("4BS")#
    subt<-all.dat.4B[all.dat.4B$Year%in%years,]#
    B4tmp<-getresults(tempdata=subt,puse=tmpP$pvalin,penergy=tmpP$EDin,W0use=W0use1)#
    if(any(is.na(B4tmp))){#
      cc<-which(is.na(B4tmp))#
      B4tmp<-B4tmp[-cc]#
    }#
    B4yr<-as.numeric(names(B4tmp))#
    tmpP<-assignP("3A")#
    subt<-all.dat.A3[all.dat.A3$Year%in%years,]#
    A3tmp<-getresults(tempdata=subt,puse=tmpP$pvalin,penergy=tmpP$EDin,W0use=W0use1)#
    if(any(is.na(A3tmp))){#
      cc<-which(is.na(A3tmp))#
      A3tmp<-A3tmp[-cc]#
    }#
    A3yr<-as.numeric(names(A3tmp))#
    tmpP<-assignP("4CD")#
    subt<-all.dat.4CD[all.dat.4CD$Year%in%years,]#
    CD4tmp<-getresults(tempdata=subt,puse=tmpP$pvalin,penergy=tmpP$EDin,W0use=W0use1)#
    if(any(is.na(CD4tmp))){#
      cc<-which(is.na(CD4tmp))#
      CD4tmp<-CD4tmp[-cc]#
    }#
    CD4yr<-as.numeric(names(CD4tmp))#
    quartz(width=W, height=H)#
    par(mar=c(1,4,0,0)) # margins of graph: (bottom,left, top, right)#
    par(mgp=c(2,.5,0)) # axis margins: (distance of lab, distance of numbers, axis line)#
    par(oma=c(3,1,1,1))# outer margins of graph: (bottom,left, top, right)#
    par(mfrow=c(2,2))#
    plotresults2(alpha1=alpha,what="Temp",ttmp=A3tmp,coluse=col1,ylimm=c(0,16))#
    if(inc4b) plotresults2(alpha1=alpha,what="Temp",ttmp=B4tmp,newplot=0,coluse=col3)#
    plotresults2(alpha1=alpha,what="Temp",ttmp=CD4tmp,newplot=0,coluse=col2)#
    mtext(expression(bold(paste("Temperature ( ",degree,"C)"))),side=2,line=2.5)#
    mtext("a)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    abline(h=PARMS_USE$Tco,lty=2,col=colors()[320])#
    yrs<-years#
    yr<-min(yrs):max(yrs)#
    cols1<-rep("white",length(yr));cols1[(yr%in%A3yr)]<-col1(length(A3yr))#
    cols2<-rep("white",length(yr));cols2[(yr%in%CD4yr)]<-col2(length(CD4yr))#
    cols3<-rep("white",length(yr));cols3[(yr%in%B4yr)]<-col3(length(B4yr))#
    ny<-length(yr)#
    px<-endday1*seq(x1,x2,.005);nx<-length(px)#
    px<-endday1*seq(x1,x2,(x2-x1)/(ny-1))#
    points(px,rep(3,ny),col=cols1,pch=15,cex=1.2) #.0665#
    points(px,rep(2.5,ny),col=cols2,pch=15,cex=1.2) #.08#
    if(inc4b) points(px,rep(.04,ny),col=cols3,pch=15,cex=1.2) #.08#
    for(y in 1:ny)#
      text(px[y],l1,yr[y],srt=90,cex=.7) #.073#
    text(px[1],l2,"3A",cex=.7,pos=2) #.078#
    text(px[1],l3,"4CD",cex=.7,pos=2) #.078#
    if(inc4b) text(px[1],l4,"4B",cex=.7,pos=2) #.0665#
    plotresults2(alpha1=alpha,what="allR*100",ttmp=A3tmp,coluse=col1,ylimm=c(0,.8))#
    if(inc4b) plotresults2(alpha1=alpha,what="allR*100",ttmp=B4tmp,newplot=0,coluse=col3)#
    plotresults2(alpha1=alpha,what="allR*100",ttmp=CD4tmp,newplot=0,coluse=col2)#
    mtext("b)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    mtext(expression(bold(paste("Resp (% BW ",d^-1,")"))),2,outer=FALSE,line=2.5,font=2,cex=1)#
    plotresults2(alpha1=alpha,what="C*100",ttmp=A3tmp,coluse=col1,ylimm=climm,axis1=TRUE)#
    if(inc4b) plotresults2(alpha1=alpha,what="C*100",ttmp=B4tmp,newplot=0,coluse=col3)	#
    plotresults2(alpha1=alpha,what="C*100",ttmp=CD4tmp,newplot=0,coluse=col2)	#
    mtext(expression(bold(paste("Consumption (% BW ",d^-1,")"))),side=2,line=2.5)#
    mtext("c)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    plotresults2(alpha1=alpha,what="G*100",ttmp=A3tmp,coluse=col1,ylimm=glimm,axis1=TRUE)#
    if(inc4b) plotresults2(alpha1=alpha,what="G*100",ttmp=B4tmp,newplot=0,coluse=col3)#
    plotresults2(alpha1=alpha,what="G*100",ttmp=CD4tmp,newplot=0,coluse=col2)#
    mtext(expression(bold(paste("Growth (% BW ",d^-1,")"))),side=2,line=2.5)#
    mtext("d)",side=3,font=2,cex=.9,adj=0.02,line=-1,outer=FALSE)#
    abline(h=0)#
    return(list(A3tmp=A3tmp,CD4tmp=CD4tmp,B4tmp=B4tmp))     #
}
.5/.7
().5-.7)/.7
(.5-.7)/.7
determinant
determinant()
?determinant
4759.74
LL<-4759.74
-2*LL+2*120
LL<-3824.53
-2*LL+2*120
library(r4ss);library(corpcor) #first get these libraries#
install.packages("corpcor",repos="https://cloud.r-project.org",dependencies=TRUE)
library(r4ss);library(corpcor) #first get these libraries
rm(list=ls())#
load("/Users/kholsman/GitHub/CEATTLE/runs/aclim_00_Nov_2018_0/results/CEATTLE_results.Rdata")#
#
sub<-read.csv("/Users/kholsman/GitHub/CEATTLE/runs/aclim_00_Nov_2018_0/projections/aclim_00_Nov_2018_0_1_3/results/ceattle_R_projection.rep",header=T,sep=" ")#
#
hind<-sub;sub<-sub[sub$species==1&sub$Scenario==5&sub$age==4,]#
#
plot(sub$N0,type="l",ylim=c(0,max(tmp$N_1[,4])))#
lines(sub$N,type="l",col="red")#
lines(tmp$N_1[,4],col="blue")#
length(tmp$N_1[,4])
plot(sub$B0,type="l",ylim=c(0,max(tmp$N_1[,4])))
plot(sub$B0,type="l",ylim=c(0,max(tmp$BiomassSSB_1[,4])))
plot(sub$B0,type="l",ylim=c(0,max(tmp$BiomassSSB0_1[,4])))
plot(sub$B0,type="l",ylim=c(0,max(tmp$BiomassSSB_1[,4])))
lines(sub$B,type="l",col="red")
lines(tmp$BiomassSSB_1[,4],col="blue")
rm(list=ls())#
load("/Users/kholsman/GitHub/CEATTLE/runs/aclim_00_Nov_2018_0/results/CEATTLE_results.Rdata")#
#
sub<-read.csv("/Users/kholsman/GitHub/CEATTLE/runs/aclim_00_Nov_2018_0/projections/aclim_00_Nov_2018_0_1_3/results/ceattle_R_projection.rep",header=T,sep=" ")#
#
hind<-sub;sub<-sub[sub$species==1&sub$Scenario==5&sub$age==4,]#
#
plot(sub$N0,type="l",ylim=c(0,max(tmp$N_1[,4])))#
lines(sub$N,type="l",col="red")#
lines(tmp$N_1[,4],col="blue")#
length(tmp$N_1[,4])
rm(list=ls())#
load("/Users/kholsman/GitHub/CEATTLE/runs/aclim_00_Nov_2018_2/results/CEATTLE_results.Rdata")#
#
sub<-read.csv("/Users/kholsman/GitHub/CEATTLE/runs/aclim_00_Nov_2018_2/projections/aclim_00_Nov_2018_2_1_3/results/ceattle_R_projection.rep",header=T,sep=" ")#
#
hind<-sub;sub<-sub[sub$species==1&sub$Scenario==5&sub$age==4,]#
#
plot(sub$N0,type="l",ylim=c(0,max(tmp$N_1[,4])))#
lines(sub$N,type="l",col="red")#
lines(tmp$N_1[,4],col="blue")#
length(tmp$N_1[,4])
load("/Users/kholsman/GitHub/CEATTLE/runs/aclim_00_Nov_2018_suit_2/results/CEATTLE_results.Rdata")
newsuit<-tmp
load("/Users/kholsman/GitHub/CEATTLE/runs/aclim_00_Nov_2018_2/results/CEATTLE_results.Rdata")
plot(tmp$M2_1[,1],type="l")
lines(newsuit$M2_1[,1],col="red")
plot(tmp$M2_2[,1],type="l")
lines(newsuit$M2_2[,1],col="red")
plot(apply(tmp$N_2,2,sum),type="l")
plot(apply(tmp$N_2,1,sum),type="l")
lines(apply(newsuit$N_2,1,sum),col="red")
plot(apply(tmp$N_1,1,sum),type="l")
lines(apply(newsuit$N_1,1,sum),col="red")
lines(apply(newsuit$avgN_1,1,sum),col="red")
names(tmp)
lines(apply(newsuit$AvgN_1,1,sum),col="red")
plot(apply(tmp$AvgN_1,1,sum),type="l")
lines(apply(newsuit$AvgN_1,1,sum),col="red")
head(tmp$suit_main_1_1)
head(tmp$suit_main_1_1[,1])
plot(tmp$suit_main_1_1[,1],type="l")
plot(tmp$suit_main_2_1[,1],type="l")
plot(tmp$suit_main_1_2[,1],type="l")
tmp$suit_main_1_1
newsuit$suit_main_1_1
library(dplyr)#
#
load("/Users/kholsman/GitHub/CEATTLE/docs_archived/Abott_CEATTLE2018/ArchivedRuns/abbott2018_2/abbottB0_FP_allMCMC.Rdata")#
dat<-as_tibble(FP_allMCMC)#
#
dat<-dat%>%#
group_by(harvestMode,Scenario,future_year,species,B0,age)%>%#
filter_by(harvestMode==2,Scenario==1,species==1)
1244-28
1340.34 /7
14+18
50-30
load("/Users/kholsman/GitHub/CEATTLE/runs/abbott_test_2/ABBOTT_cube_2.Rdata")
ls()
rm(list=ls())
load("/Users/kholsman/GitHub/CEATTLE/runs/abbott_test_2/ABBOTT_cube_2.Rdata")
ls()
head(FP_all)
tail(FP_all)
length(1979:2019)
plot(FP_all$bottomT_C)
plot(FP_all$SSB_total_biom)
dim(FP_all)
load("/Users/kholsman/GitHub/CEATTLE/runs/abbott_test_2/ABBOTT_cube_2.Rdata")
dim(FP_all)
head(FP_all)
tail(FP_all)
dim(FP_all)
dim(FP_all)[1]/1e6
load("/Users/kholsman/Documents/D_AFSC_Files/Manuscripts/00_Abbott/cube20190911/cube20190911.Rdata")
ls()
cube
cube[3,]
now<-c(0.6077045, 286108.9, 3022041, 602157.9, 101387.2, 12345)
which(cube[,1]==now[1]&cube[,2]==now[2]&cube[,3]==now[3]&cube[,4]==now[4]&cube[,5]=now[5])
which(cube[,2]==now[2])
cube[,2]
now[2]
which(cube[,2]==now[2])
which(cube[,1]==now[1]&cube[,2]==now[2]&cube[,3]==now[3]&cube[,4]==now[4]&cube[,5]=now[5])
names(cube)
now
colnames(cube)
unique(cube[,2])
now[2]
unique(cube[,2])==now[2]
now[2]
now[2]+1
unique(cube[,2])+1
unique(cube[,2])%in%now[2]
unique(cube[,2])[1]
unique(cube[,2])[1]-now[2]
which(cube[,1]==now[1]&cube[,2]==now[2]&cube[,3]==now[3]&cube[,4]==now[4]&cube[,5]=now[5])round(now[1],1)
round(now[1],1)
which(#
round(cube[,1],1)==round(now[1],1)&#
round(cube[,2],1)==round(now[2],1)&#
round(cube[,3],1)==round(now[3],1)&#
round(cube[,4],1)==round(now[4],1)&#
round(cube[,5],1)=round(now[5],1))
which(round(cube[,1],1)==round(now[1],1))
which(#
round(cube[,1],1)==round(now[1],1)&#
round(cube[,2],1)==round(now[2],1)&#
round(cube[,3],1)==round(now[3],1)&#
round(cube[,4],1)==round(now[4],1)&#
round(cube[,5],1)==round(now[5],1))
which(#
round(cube[,1],1)==round(now[1],1)&#
round(cube[,2],1)==round(now[2],1)&#
round(cube[,3],1)==round(now[3],1)&#
round(cube[,4],1)==round(now[4],1))
which(#
round(cube[,1],0)==round(now[1],0)&#
round(cube[,2],0)==round(now[2],0)&#
round(cube[,3],0)==round(now[3],0)&#
round(cube[,4],0)==round(now[4],0)&#
round(cube[,5],0)==round(now[5],0))
require(TMB)#
dyn.load(dynlib("simple"))
## Test data#
set.seed(123)#
y <- rep(1900:2010,each=2)#
year <- factor(y)#
quarter <- factor(rep(1:4,length.out=length(year)))#
period <- factor((y > mean(y))+1)#
## Random year+quarter effect, fixed period effect:#
B <- model.matrix(~year+quarter-1)#
A <- model.matrix(~period-1)#
B <- as(B,"dgTMatrix")#
A <- as(A,"dgTMatrix")#
u <- rnorm(ncol(B)) ## logsdu=0#
beta <- rnorm(ncol(A))*100#
eps <- rnorm(nrow(B),sd=1) ## logsd0=0#
x <- as.numeric( A %*% beta + B %*% u + eps )#
#
## Fit model#
obj <- MakeADFun(data=list(x=x, B=B, A=A),#
                 parameters=list(u=u*0, beta=beta*0, logsdu=1, logsd0=1),#
                 random="u",#
                 DLL="simple",#
                 silent=TRUE#
                 )#
opt <- nlminb(obj$par, obj$fn, obj$gr)
devtools::install_github("james-thorson/FishStatsUtils", ref="development")
devtools::install_github("james-thorson/VAST", ref="development")
library(testthat)
library(VAST)
devtools::install_github("james-thorson/VAST", ref="development")
library(VAST)
devtools::install_github("james-thorson/VAST", ref="development")
devtools::install_github("james-thorson/VAST")
install.packages('TMB', type = 'source')
library(TMB)
devtools::install_github("james-thorson/VAST")
library(VAST)
install_github("james-thorson/VAST", INSTALL_opts="--no-staged-install")
install.packages("devtools")#
library("devtools")
install_github("james-thorson/VAST", INSTALL_opts="--no-staged-install")#
# Load package#
library(VAST)
# Install and load devtools package#
install.packages("devtools")#
library("devtools")
library("devtools")
install.packages("digest")
devtools::install_github("hadley/devtools")
library(digest)
devtools::install_github("hadley/devtools")
library(processx)
install.package(processx)
install.packages("processx")
uninstall.R()
library(devtools)
library(NRG)
# Install package#
install_github("james-thorson/VAST", INSTALL_opts="--no-staged-install")#
# Load package#
library(VAST)
library(VAST)
install.package("VAST")
library(INLA)
library(TMB)
install.packages('TMB', type = 'source')
install.packages("TMB")
library(TMB)#
## Optionally:#
## precompile()#
runExample(all=TRUE)
library(shiny)#
library(dygraphs)#
library(httr)#
library(RCurl)#
library(ggplot2)#
library(dplyr)#
library(dygraphs)#
library(xts) # To make the convertion data-frame / xts format
input<-list()#
  input$county<-"Washington : King"#
  input$state<-"Idaho"#
  input$dateoffsetIN=12#
  input$lwr = 0.96#
  input$upr = 1.6#
  input$ylimmIN=c(.96,1.6)#
  input$reflines1=4#
  input$reflines2=7#
  input$reflines3=14#
  input$showrid =FALSE
convert_to_daily_ts <- function(x,y,n){#
  A <- as.numeric(format(x[1],"%Y"))#
  a <- as.numeric(format(x[1],"%j"))#
  B <- as.numeric(format(x[n],"%Y"))#
  b <- as.numeric(format(x[n],"%j"))#
  AA <- as.numeric(x[1])#
  BB <- as.numeric(x[n])#
  #ts(y, start = c(A,a), end = c(B,b), frequency = 365)#
  y_ts<- ts(y, start = AA, end = BB, frequency = 1)#
  return(y_ts)#
}#
#
getReff<-function(datIN=sub,days=7,unit="deaths"){#
  #dat  <-  ts(data.frame(date=datIN$date,datIN[unit]))#
  dat  <-  (data.frame(date=datIN$date,datIN[unit]))#
  n    <-  dim(dat)[1]#
  days:n#
  lnslope  <- slope  <- rep(NA,n)#
  for(d in days:n){#
    tt          <-  ((d-days)+1):d#
    tmp         <-  dat[tt,]#
    if(any(tmp[,2]==0))#
      tmp[,2][tmp[,2]==0]<-NA#
    if(!any(is.na(tmp[,2]))){#
      lmm         <-  lm(log(tmp[,2])~tt)#
      lnslope[d]  <-  (as.numeric(coef(lmm)[2]))#
      slope[d]    <-  exp(lnslope[d])#
    }else{#
      lnslope[d]  <-  slope[d]    <-  NA#
    }#
  }#
  return(slope)#
}#
#
# pre-code:#
  url          <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"#
  csv          <- read.csv(text=getURL(url), skip=0, header=T)#
  csv$label    <- paste(csv$state,":",csv$county)#
  lab_counties <- as_tibble(csv)%>%#
    group_by(state,county,label)%>%#
    summarise(count=length(county))#
#
start_lab <- lab_counties[which(lab_counties$county=="King"&lab_counties$state=="Washington"),]
start_lab
start_lab <- data.frame(lab_counties[which(lab_counties$county=="King"&lab_counties$state=="Washington"),])
start_lab
countyIN <-lab_counties[lab_counties$label==input$county,]$county#
    stateIN  <- input$state#
    sub          <- csv[csv$label==input$county,]#
    sub$date     <- as.Date(sub$date)#
    sub_state      <- csv[csv$state==input$state,]#
    sub_state$date <- as.Date(sub_state$date)
head(sub)
head(state)
head(sub_state)
state<-as_tibble(sub_state)%>%#
      group_by(date,state)%>%#
      summarize(cases=sum(cases),deaths=sum(deaths))
head(state)
sub            <- csv[csv$label==input$county,]#
    sub$date       <- as.Date(sub$date)#
    sub_state      <- csv[csv$state==input$state,]#
    sub_state$date <- as.Date(sub_state$date)#
    state          <- as_tibble(sub_state)%>%#
      group_by(date,state)%>%#
      summarize(cases=sum(cases),deaths=sum(deaths))#
    sub$Reff_deaths    <-  getReff(unit="deaths",datIN=sub,days=input$dateoffsetIN)#
    sub$Reff_cases     <-  getReff(unit="cases",datIN=sub,days=input$dateoffsetIN)#
    state$Reff_deaths  <-  getReff(unit="deaths",datIN=state,days=input$dateoffsetIN)#
    state$Reff_cases   <-  getReff(unit="cases",datIN=state,days=input$dateoffsetIN)#
    # eval(parse(text=paste0("sub$'doubling every ",input$reflines1," days'<- exp((log(100)-log(50))/(",input$reflines1,"))")))#
    # eval(parse(text=paste0("sub$'... ",input$reflines2," days'<- exp((log(100)-log(50))/(",input$reflines2,"))")))#
    # eval(parse(text=paste0("sub$'... ",input$reflines3," days'<- exp((log(100)-log(50))/(",input$reflines3,"))")))#
    lab<-c(paste0("doubling every ",input$reflines1," days"),#
           paste0("... ",input$reflines2," days"),#
           paste0("... ",input$reflines3," days"))#
    exp((log(100)-log(50))/(input$reflines1))#
    sub$lab1<-paste("R_e: deaths; doubling every",round((log(100)-log(50))/log(sub$Reff_deaths)),"days")#
    sub$lab2<-paste("R_e: deaths; doubling every",round((log(100)-log(50))/log(sub$Reff_cases) ),"days")#
    ref<- c(exp((log(100)-log(50))/(input$reflines1)),#
          exp((log(100)-log(50))/(input$reflines2)),#
          exp((log(100)-log(50))/(input$reflines3)))#
    # Then you can create the xts format, and thus use dygraph#
    plotdat1 <- xts(x =   sub[,c("Reff_deaths","Reff_cases")], order.by = sub$date)#
    plotdat2 <- xts(x = state[,c("Reff_deaths","Reff_cases")], order.by = state$date)
head(plotdat1)
head(plotdat2)
head(state)
head(sub)
input$state = "Washington"
sub            <- csv[csv$label==input$county,]#
    sub$date       <- as.Date(sub$date)#
    sub_state      <- csv[csv$state==input$state,]#
    sub_state$date <- as.Date(sub_state$date)#
    state          <- as_tibble(sub_state)%>%#
      group_by(date,state)%>%#
      summarize(cases=sum(cases),deaths=sum(deaths))#
    sub$Reff_deaths    <-  getReff(unit="deaths",datIN=sub,days=input$dateoffsetIN)#
    sub$Reff_cases     <-  getReff(unit="cases",datIN=sub,days=input$dateoffsetIN)#
    state$Reff_deaths  <-  getReff(unit="deaths",datIN=state,days=input$dateoffsetIN)#
    state$Reff_cases   <-  getReff(unit="cases",datIN=state,days=input$dateoffsetIN)#
    # eval(parse(text=paste0("sub$'doubling every ",input$reflines1," days'<- exp((log(100)-log(50))/(",input$reflines1,"))")))#
    # eval(parse(text=paste0("sub$'... ",input$reflines2," days'<- exp((log(100)-log(50))/(",input$reflines2,"))")))#
    # eval(parse(text=paste0("sub$'... ",input$reflines3," days'<- exp((log(100)-log(50))/(",input$reflines3,"))")))#
    lab<-c(paste0("doubling every ",input$reflines1," days"),#
           paste0("... ",input$reflines2," days"),#
           paste0("... ",input$reflines3," days"))#
    exp((log(100)-log(50))/(input$reflines1))#
    sub$lab1<-paste("R_e: deaths; doubling every",round((log(100)-log(50))/log(sub$Reff_deaths)),"days")#
    sub$lab2<-paste("R_e: deaths; doubling every",round((log(100)-log(50))/log(sub$Reff_cases) ),"days")#
    ref<- c(exp((log(100)-log(50))/(input$reflines1)),#
          exp((log(100)-log(50))/(input$reflines2)),#
          exp((log(100)-log(50))/(input$reflines3)))#
    # Then you can create the xts format, and thus use dygraph#
    plotdat1 <- xts(x =   sub[,c("Reff_deaths","Reff_cases")], order.by = sub$date)#
    plotdat2 <- xts(x = state[,c("Reff_deaths","Reff_cases")], order.by = state$date)
head(state)
head(sub)
head(csv)
which(csv$county=="King")
csv[cc,]
cc<-which(csv$county=="King")
csv[cc,]
sub
url          <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"#
csv          <- read.csv(text=getURL(url), skip=0, header=T)
cc<-which(csv$county=="King")
csv[cc,]
sub            <- csv[csv$label==input$county,]#
    sub$date       <- as.Date(sub$date)#
    sub_state      <- csv[csv$state==input$state,]#
    sub_state$date <- as.Date(sub_state$date)#
    state          <- as_tibble(sub_state)%>%#
      group_by(date,state)%>%#
      summarize(cases=sum(cases),deaths=sum(deaths))#
    sub$Reff_deaths    <-  getReff(unit="deaths",datIN=sub,days=input$dateoffsetIN)#
    sub$Reff_cases     <-  getReff(unit="cases",datIN=sub,days=input$dateoffsetIN)#
    state$Reff_deaths  <-  getReff(unit="deaths",datIN=state,days=input$dateoffsetIN)#
    state$Reff_cases   <-  getReff(unit="cases",datIN=state,days=input$dateoffsetIN)
url          <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"#
csv          <- read.csv(text=getURL(url), skip=0, header=T)#
csv$label    <- paste(csv$state,":",csv$county)#
lab_counties <- as_tibble(csv)%>%#
  group_by(state,county,label)%>%#
  summarise(count=length(county))#
start_lab <- lab_counties[which(lab_counties$county=="King"&lab_counties$state=="Washington"),]
sub            <- csv[csv$label==input$county,]#
    sub$date       <- as.Date(sub$date)#
    sub_state      <- csv[csv$state==input$state,]#
    sub_state$date <- as.Date(sub_state$date)#
    state          <- as_tibble(sub_state)%>%#
      group_by(date,state)%>%#
      summarize(cases=sum(cases),deaths=sum(deaths))#
    sub$Reff_deaths    <-  getReff(unit="deaths",datIN=sub,days=input$dateoffsetIN)#
    sub$Reff_cases     <-  getReff(unit="cases",datIN=sub,days=input$dateoffsetIN)#
    state$Reff_deaths  <-  getReff(unit="deaths",datIN=state,days=input$dateoffsetIN)#
    state$Reff_cases   <-  getReff(unit="cases",datIN=state,days=input$dateoffsetIN)
plot(sub$Reff_deaths)
days<-1
datIN=sub
unit=
"deaths"
dat  <-  (data.frame(date=datIN$date,datIN[unit]))#
  n    <-  dim(dat)[1]#
  lnslope  <- slope  <- rep(NA,n)
days
n
for(d in days:n){#
    tt          <-  ((d-days)+1):d#
    tmp         <-  dat[tt,]#
    if(any(tmp[,2]==0))#
      tmp[,2][tmp[,2]==0]<-NA#
    if(!any(is.na(tmp[,2]))){#
      lmm         <-  lm(log(tmp[,2])~tt)#
      lnslope[d]  <-  (as.numeric(coef(lmm)[2]))#
      slope[d]    <-  exp(lnslope[d])#
    }else{#
      lnslope[d]  <-  slope[d]    <-  NA#
    }#
  }
lnslope
slope
d<-1
tt          <-  ((d-days)+1):d#
    tmp         <-  dat[tt,]
tt
tmp
((d-days)+1):d
order(unique(csv$state))
sort(unique(csv$state))
load("/Users/kholsman/Documents/D_AFSC_Files/AFSC_data/01_SRVY_AFSC_data_all/Newest/Out_SMRY_QRYS/Biom_weighted/ebs/plk/ebs_plk_c_ED_BYstation_bin.Rdata")
ls()
rm(liast=ls())
"/Users/kholsman/Documents/D_AFSC_Files/AFSC_data/01_SRVY_AFSC_data_all/Newest/Out_SMRY_QRYS/Biom_weighted/ebs/plk/ebs_plk_c_ED_NEBS_BYstation_bin.Rdata"
ls()
load("/Users/kholsman/Documents/D_AFSC_Files/AFSC_data/01_SRVY_AFSC_data_all/Newest/Out_SMRY_QRYS/Biom_weighted/annual_mn/BS_c_ED_annual_mn.Rdata")
ls()
load("/Users/kholsman/Documents/D_AFSC_Files/AFSC_data/01_SRVY_AFSC_data_all/Newest/Out_SMRY_QRYS/Biom_weighted/c_USE/BS_c_ED.Rdata")
ls()
names(BS_c_USE)
BS_c_USE[BS_c_USE$R_ggd==Inf,]
BS_c_USE[BS_c_USE$R_ggd==Inf,1:10]
head(BS_c_USE[BS_c_USE$R_ggd==Inf,1:10])
heaD(BS_c_USE)
head(BS_c_USE)
which(R_ggd==Inf)
which(BS_c_USE$R_ggd==Inf)
BS_c_USE[which(BS_c_USE$R_ggd==Inf),]
ddd<-BS_c_USE[which(BS_c_USE$R_ggd==Inf),]
i<-1
load("/Users/kholsman/Documents/D_AFSC_Files/AFSC_data/01_SRVY_AFSC_data_all/Newest/Out_SMRY_QRYS/Biom_weighted/c_USE/BS_c_ED.Rdata")dd
dd$Obs
ddd$Obs
ddd$totK
ddd$totJ
ddd$tot_C_J_gpred
BS_c_USE[which(BS_c_USE$W_use==0),]
load("/Users/kholsman/GitHub_new/EBM_Holsman_NatComm/data/out/EBM_ceattlenew.Rdata")
ls()
C_thresh_13_1
load("/Users/kholsman/GitHub_new/EBM_Holsman_NatComm/data/out/multispp_simulations.Rdata")
dat_2_5_12
load("/Users/kholsman/GitHub_new/EBM_Holsman_NatComm/data/out/risk.Rdata")
ls()
risk12
load("/Users/kholsman/GitHub_new/EBM_Holsman_NatComm/data/in/raw/covariates.Rdata")
ls()
rm(list=ls())
load("/Users/kholsman/GitHub_new/EBM_Holsman_NatComm/data/in/raw/covariates.Rdata")
head(covariates)
write.csv(covariates,file="/Users/kholsman/GitHub_new/EBM_Holsman_NatComm/data/in/raw/covariates.csv",sep=",")
devtools::install_github("ropensci/rfigshare")
require(rfigshare)
fs_author_search("Boettiger")
"/Users/kholsman/GitHub_new/EBM_Holsman_NatComm"
fs_author_search("Boettiger")
require("rfigshare")#
fs_author_search("Boettiger")
# set your local path:#
    main  <-  path.expand("~/GitHub_new/EBM_Holsman_NatComm/")#
    setwd(main)#
    # load data, packages, setup, etc.#
    source("R/make.R")
cat(paste("\n\n update.figs  = ",update.figs,"\n"))#
cat(paste("\n\n update.outputs  = ",update.outputs,"\n"))#
#
  # this will generate the paper figures without overwriting them (will throw warnings; disregard)#
  source("R/sub_scripts/make_plots.R")
fig2()
graphics.off()
fig2()
graphics.off()
graphics.off()
